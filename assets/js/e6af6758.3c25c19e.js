"use strict";(self.webpackChunkany_doc=self.webpackChunkany_doc||[]).push([[5497],{3905:function(n,e,t){t.d(e,{Zo:function(){return c},kt:function(){return y}});var r=t(67294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var s=r.createContext({}),d=function(n){var e=r.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},c=function(n){var e=d(n.components);return r.createElement(s.Provider,{value:e},n.children)},p="mdxType",u={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,o=n.originalType,s=n.parentName,c=l(n,["components","mdxType","originalType","parentName"]),p=d(t),m=a,y=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return t?r.createElement(y,i(i({ref:e},c),{},{components:t})):r.createElement(y,i({ref:e},c))}));function y(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=n,l[p]="string"==typeof n?n:a,i[1]=l;for(var d=2;d<o;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},75376:function(n,e,t){t.r(e),t.d(e,{assets:function(){return c},contentTitle:function(){return s},default:function(){return y},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return p}});var r=t(87462),a=t(63366),o=(t(67294),t(3905)),i=["components"],l={last_update:{date:1694307517838}},s=void 0,d={unversionedId:"codeing/Python/\u540e\u53f0\u64cd\u4f5c\u952e\u9f20",id:"codeing/Python/\u540e\u53f0\u64cd\u4f5c\u952e\u9f20",title:"\u540e\u53f0\u64cd\u4f5c\u952e\u9f20",description:"\u64cd\u4f5c\u952e\u76d8",source:"@site/docs/09-codeing/06-Python/01-\u540e\u53f0\u64cd\u4f5c\u952e\u9f20.md",sourceDirName:"09-codeing/06-Python",slug:"/codeing/Python/\u540e\u53f0\u64cd\u4f5c\u952e\u9f20",permalink:"/codeing/Python/\u540e\u53f0\u64cd\u4f5c\u952e\u9f20",draft:!1,editUrl:"https://github.com/share121/share121.github.io/edit/main/docs/09-codeing/06-Python/01-\u540e\u53f0\u64cd\u4f5c\u952e\u9f20.md",tags:[],version:"current",lastUpdatedBy:"share121",lastUpdatedAt:1694307517.838,formattedLastUpdatedAt:"2023\u5e749\u670810\u65e5",sidebarPosition:1,frontMatter:{last_update:{date:1694307517838}},sidebar:"tutorialSidebar",previous:{title:"\u9632\u6b62\u5f3a\u5236\u8df3\u8f6c",permalink:"/codeing/crack/\u9632\u6b62\u5f3a\u5236\u8df3\u8f6c"},next:{title:"OpenCV",permalink:"/codeing/Python/OpenCV"}},c={},p=[{value:"\u64cd\u4f5c\u952e\u76d8",id:"\u64cd\u4f5c\u952e\u76d8",level:2},{value:"\u64cd\u4f5c\u9f20\u6807",id:"\u64cd\u4f5c\u9f20\u6807",level:2}],u={toc:p},m="wrapper";function y(n){var e=n.components,t=(0,a.Z)(n,i);return(0,o.kt)(m,(0,r.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"\u64cd\u4f5c\u952e\u76d8"},"\u64cd\u4f5c\u952e\u76d8"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},'from ctypes import windll\nfrom ctypes.wintypes import HWND\nimport string\nimport time\n\nPostMessageW = windll.user32.PostMessageW\nMapVirtualKeyW = windll.user32.MapVirtualKeyW\nVkKeyScanA = windll.user32.VkKeyScanA\n\nWM_KEYDOWN = 0x100\nWM_KEYUP = 0x101\n\n# https://docs.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes\nVkCode = {\n    "back":  0x08,\n    "tab":  0x09,\n    "return":  0x0D,\n    "shift":  0x10,\n    "control":  0x11,\n    "menu":  0x12,\n    "pause":  0x13,\n    "capital":  0x14,\n    "escape":  0x1B,\n    "space":  0x20,\n    "end":  0x23,\n    "home":  0x24,\n    "left":  0x25,\n    "up":  0x26,\n    "right":  0x27,\n    "down":  0x28,\n    "print":  0x2A,\n    "snapshot":  0x2C,\n    "insert":  0x2D,\n    "delete":  0x2E,\n    "lwin":  0x5B,\n    "rwin":  0x5C,\n    "numpad0":  0x60,\n    "numpad1":  0x61,\n    "numpad2":  0x62,\n    "numpad3":  0x63,\n    "numpad4":  0x64,\n    "numpad5":  0x65,\n    "numpad6":  0x66,\n    "numpad7":  0x67,\n    "numpad8":  0x68,\n    "numpad9":  0x69,\n    "multiply":  0x6A,\n    "add":  0x6B,\n    "separator":  0x6C,\n    "subtract":  0x6D,\n    "decimal":  0x6E,\n    "divide":  0x6F,\n    "f1":  0x70,\n    "f2":  0x71,\n    "f3":  0x72,\n    "f4":  0x73,\n    "f5":  0x74,\n    "f6":  0x75,\n    "f7":  0x76,\n    "f8":  0x77,\n    "f9":  0x78,\n    "f10":  0x79,\n    "f11":  0x7A,\n    "f12":  0x7B,\n    "numlock":  0x90,\n    "scroll":  0x91,\n    "lshift":  0xA0,\n    "rshift":  0xA1,\n    "lcontrol":  0xA2,\n    "rcontrol":  0xA3,\n    "lmenu":  0xA4,\n    "rmenu":  0XA5\n}\n\n\ndef get_virtual_keycode(key: str):\n    """\u6839\u636e\u6309\u952e\u540d\u83b7\u53d6\u865a\u62df\u6309\u952e\u7801\n\n    Args:\n        key (str): \u6309\u952e\u540d\n\n    Returns:\n        int: \u865a\u62df\u6309\u952e\u7801\n    """\n    if len(key) == 1 and key in string.printable:\n        # https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-vkkeyscana\n        return VkKeyScanA(ord(key)) & 0xff\n    else:\n        return VkCode[key]\n\n\ndef key_down(handle: HWND, key: str):\n    """\u6309\u4e0b\u6307\u5b9a\u6309\u952e\n\n    Args:\n        handle (HWND): \u7a97\u53e3\u53e5\u67c4\n        key (str): \u6309\u952e\u540d\n    """\n    vk_code = get_virtual_keycode(key)\n    scan_code = MapVirtualKeyW(vk_code, 0)\n    # https://docs.microsoft.com/en-us/windows/win32/inputdev/wm-keydown\n    wparam = vk_code\n    lparam = (scan_code << 16) | 1\n    PostMessageW(handle, WM_KEYDOWN, wparam, lparam)\n\n\ndef key_up(handle: HWND, key: str):\n    """\u653e\u5f00\u6307\u5b9a\u6309\u952e\n\n    Args:\n        handle (HWND): \u7a97\u53e3\u53e5\u67c4\n        key (str): \u6309\u952e\u540d\n    """\n    vk_code = get_virtual_keycode(key)\n    scan_code = MapVirtualKeyW(vk_code, 0)\n    # https://docs.microsoft.com/en-us/windows/win32/inputdev/wm-keyup\n    wparam = vk_code\n    lparam = (scan_code << 16) | 0XC0000001\n    PostMessageW(handle, WM_KEYUP, wparam, lparam)\n\n\nif __name__ == "__main__":\n    # \u9700\u8981\u548c\u76ee\u6807\u7a97\u53e3\u540c\u4e00\u6743\u9650\uff0c\u6e38\u620f\u7a97\u53e3\u901a\u5e38\u662f\u7ba1\u7406\u5458\u6743\u9650\n    import sys\n    if not windll.shell32.IsUserAnAdmin():\n        # \u4e0d\u662f\u7ba1\u7406\u5458\u5c31\u63d0\u6743\n        windll.shell32.ShellExecuteW(\n            None, "runas", sys.executable, __file__, None, 1)\n\n    import cv2\n    handle = windll.user32.FindWindowW(None, "\u4e00\u68a6\u6c5f\u6e56")\n    # \u63a7\u5236\u89d2\u8272\u5411\u524d\u79fb\u52a8\u4e24\u79d2\n    key_down(handle, \'w\')\n    time.sleep(2)\n    key_up(handle, \'w\')\n')),(0,o.kt)("h2",{id:"\u64cd\u4f5c\u9f20\u6807"},"\u64cd\u4f5c\u9f20\u6807"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},'from ctypes import windll, byref\nfrom ctypes.wintypes import HWND, POINT\nimport time\n\nPostMessageW = windll.user32.PostMessageW\nClientToScreen = windll.user32.ClientToScreen\n\nWM_MOUSEMOVE = 0x0200\nWM_LBUTTONDOWN = 0x0201\nWM_LBUTTONUP = 0x202\nWM_MOUSEWHEEL = 0x020A\nWHEEL_DELTA = 120\n\n\ndef move_to(handle: HWND, x: int, y: int):\n    """\u79fb\u52a8\u9f20\u6807\u5230\u5750\u6807\uff08x, y)\n\n    Args:\n        handle (HWND): \u7a97\u53e3\u53e5\u67c4\n        x (int): \u6a2a\u5750\u6807\n        y (int): \u7eb5\u5750\u6807\n    """\n    # https://docs.microsoft.com/en-us/windows/win32/inputdev/wm-mousemove\n    wparam = 0\n    lparam = y << 16 | x\n    PostMessageW(handle, WM_MOUSEMOVE, wparam, lparam)\n\n\ndef left_down(handle: HWND, x: int, y: int):\n    """\u5728\u5750\u6807(x, y)\u6309\u4e0b\u9f20\u6807\u5de6\u952e\n\n    Args:\n        handle (HWND): \u7a97\u53e3\u53e5\u67c4\n        x (int): \u6a2a\u5750\u6807\n        y (int): \u7eb5\u5750\u6807\n    """\n    # https://docs.microsoft.com/en-us/windows/win32/inputdev/wm-lbuttondown\n    wparam = 0\n    lparam = y << 16 | x\n    PostMessageW(handle, WM_LBUTTONDOWN, wparam, lparam)\n\n\ndef left_up(handle: HWND, x: int, y: int):\n    """\u5728\u5750\u6807(x, y)\u653e\u5f00\u9f20\u6807\u5de6\u952e\n\n    Args:\n        handle (HWND): \u7a97\u53e3\u53e5\u67c4\n        x (int): \u6a2a\u5750\u6807\n        y (int): \u7eb5\u5750\u6807\n    """\n    # https://docs.microsoft.com/en-us/windows/win32/inputdev/wm-lbuttonup\n    wparam = 0\n    lparam = y << 16 | x\n    PostMessageW(handle, WM_LBUTTONUP, wparam, lparam)\n\n\ndef scroll(handle: HWND, delta: int, x: int, y: int):\n    """\u5728\u5750\u6807(x, y)\u6eda\u52a8\u9f20\u6807\u6eda\u8f6e\n\n    Args:\n        handle (HWND): \u7a97\u53e3\u53e5\u67c4\n        delta (int): \u4e3a\u6b63\u5411\u4e0a\u6eda\u52a8\uff0c\u4e3a\u8d1f\u5411\u4e0b\u6eda\u52a8\n        x (int): \u6a2a\u5750\u6807\n        y (int): \u7eb5\u5750\u6807\n    """\n    move_to(handle, x, y)\n    # https://docs.microsoft.com/en-us/windows/win32/inputdev/wm-mousewheel\n    wparam = delta << 16\n    p = POINT(x, y)\n    ClientToScreen(handle, byref(p))\n    lparam = p.y << 16 | p.x\n    PostMessageW(handle, WM_MOUSEWHEEL, wparam, lparam)\n\n\ndef scroll_up(handle: HWND, x: int, y: int):\n    """\u5728\u5750\u6807(x, y)\u5411\u4e0a\u6eda\u52a8\u9f20\u6807\u6eda\u8f6e\n\n    Args:\n        handle (HWND): \u7a97\u53e3\u53e5\u67c4\n        x (int): \u6a2a\u5750\u6807\n        y (int): \u7eb5\u5750\u6807\n    """\n    scroll(handle, WHEEL_DELTA, x, y)\n\n\ndef scroll_down(handle: HWND, x: int, y: int):\n    """\u5728\u5750\u6807(x, y)\u5411\u4e0b\u6eda\u52a8\u9f20\u6807\u6eda\u8f6e\n\n    Args:\n        handle (HWND): \u7a97\u53e3\u53e5\u67c4\n        x (int): \u6a2a\u5750\u6807\n        y (int): \u7eb5\u5750\u6807\n    """\n    scroll(handle, -WHEEL_DELTA, x, y)\n\n\nif __name__ == "__main__":\n    # \u9700\u8981\u548c\u76ee\u6807\u7a97\u53e3\u540c\u4e00\u6743\u9650\uff0c\u6e38\u620f\u7a97\u53e3\u901a\u5e38\u662f\u7ba1\u7406\u5458\u6743\u9650\n    import sys\n    if not windll.shell32.IsUserAnAdmin():\n        # \u4e0d\u662f\u7ba1\u7406\u5458\u5c31\u63d0\u6743\n        windll.shell32.ShellExecuteW(\n            None, "runas", sys.executable, __file__, None, 1)\n\n    import cv2\n    handle = windll.user32.FindWindowW(None, "\u4e00\u68a6\u6c5f\u6e56")\n    # \u70b9\u51fb\u7ebf\u8def\n    left_down(handle, 1234, 20)\n    time.sleep(0.1)\n    left_up(handle, 1234, 20)\n    time.sleep(1)\n    # \u6eda\u52a8\u7ebf\u8def\u5217\u8868\n    scroll_down(handle, 1000, 200)\n')))}y.isMDXComponent=!0}}]);