"use strict";(self.webpackChunkany_doc=self.webpackChunkany_doc||[]).push([[5247],{61291:function(e,s,n){n.r(s),n.d(s,{assets:function(){return l},contentTitle:function(){return t},default:function(){return h},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return o}});var r=n(11527),d=n(47214);const i={last_update:{date:1702178563505}},t="\u8fd0\u7b97\u7b26",c={id:"codeing/dart-tutorials/operators",title:"\u8fd0\u7b97\u7b26",description:"Dart supports the operators shown in the following table. The table shows Dart\u2019s operator associativity and operator precedence from highest to lowest, which are an approximation of Dart\u2019s operator relationships. You can implement many of these operators as class members.",source:"@site/docs/09-codeing/13-dart-tutorials/02-operators.md",sourceDirName:"09-codeing/13-dart-tutorials",slug:"/codeing/dart-tutorials/operators",permalink:"/codeing/dart-tutorials/operators",draft:!1,unlisted:!1,editUrl:"https://github.com/share121/share121.github.io/edit/main/docs/09-codeing/13-dart-tutorials/02-operators.md",tags:[],version:"current",lastUpdatedBy:"share121",lastUpdatedAt:1702178563.505,formattedLastUpdatedAt:"2023\u5e7412\u670810\u65e5",sidebarPosition:2,frontMatter:{last_update:{date:1702178563505}},sidebar:"tutorialSidebar",previous:{title:"\u53d8\u91cf",permalink:"/codeing/dart-tutorials/variables"},next:{title:"\u5355\u6587\u4ef6\u5236\u4f5c",permalink:"/technology/\u5355\u6587\u4ef6\u5236\u4f5c/"}},l={},o=[{value:"Operator precedence example \u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u793a\u4f8b",id:"operator-precedence-example-\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u793a\u4f8b",level:2},{value:"Arithmetic operators \u7b97\u672f\u8fd0\u7b97\u7b26",id:"arithmetic-operators-\u7b97\u672f\u8fd0\u7b97\u7b26",level:2},{value:"Equality and relational operators \u76f8\u7b49\u548c\u5173\u7cfb\u8fd0\u7b97\u7b26",id:"equality-and-relational-operators-\u76f8\u7b49\u548c\u5173\u7cfb\u8fd0\u7b97\u7b26",level:2},{value:"Type test operators \u578b\u5f0f\u8bd5\u9a8c\u64cd\u4f5c\u5458",id:"type-test-operators-\u578b\u5f0f\u8bd5\u9a8c\u64cd\u4f5c\u5458",level:2},{value:"Assignment operators \u8d4b\u503c\u8fd0\u7b97\u7b26",id:"assignment-operators-\u8d4b\u503c\u8fd0\u7b97\u7b26",level:2},{value:"Logical operators \u903b\u8f91\u8fd0\u7b97\u7b26",id:"logical-operators-\u903b\u8f91\u8fd0\u7b97\u7b26",level:2},{value:"Bitwise and shift operators \u6309\u4f4d\u8fd0\u7b97\u7b26\u548c\u79fb\u4f4d\u8fd0\u7b97\u7b26",id:"bitwise-and-shift-operators-\u6309\u4f4d\u8fd0\u7b97\u7b26\u548c\u79fb\u4f4d\u8fd0\u7b97\u7b26",level:2},{value:"Conditional expressions \u6761\u4ef6\u8868\u8fbe\u5f0f",id:"conditional-expressions-\u6761\u4ef6\u8868\u8fbe\u5f0f",level:2},{value:"Cascade notation \u7ea7\u8054\u8868\u793a\u6cd5",id:"cascade-notation-\u7ea7\u8054\u8868\u793a\u6cd5",level:2},{value:"Other operators \u5176\u4ed6\u8fd0\u8425\u5546",id:"other-operators-\u5176\u4ed6\u8fd0\u8425\u5546",level:2}];function a(e){const s={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"\u8fd0\u7b97\u7b26",children:"\u8fd0\u7b97\u7b26"}),"\n",(0,r.jsxs)(s.p,{children:["Dart supports the operators shown in the following table. The table shows Dart\u2019s operator associativity and ",(0,r.jsx)(s.a,{href:"https://dart.dev/language/operators#operator-precedence-example",children:"operator precedence"})," from highest to lowest, which are an ",(0,r.jsx)(s.strong,{children:"approximation"})," of Dart\u2019s operator relationships. You can implement many of these ",(0,r.jsx)(s.a,{href:"https://dart.dev/language/methods#operators",children:"operators as class members"}),".",(0,r.jsx)(s.br,{}),"\n","Dart \u652f\u6301\u4e0b\u8868\u6240\u793a\u7684\u7b97\u5b50\u3002\u8be5\u8868\u663e\u793a\u4e86 Dart \u7684\u7b97\u5b50\u5173\u8054\u6027\u548c\u4ece\u9ad8\u5230\u4f4e\u7684\u7b97\u5b50\u4f18\u5148\u7ea7\uff0c\u8fd9\u662f Dart \u7b97\u5b50\u5173\u7cfb\u7684\u8fd1\u4f3c\u503c\u3002\u60a8\u53ef\u4ee5\u5c06\u5176\u4e2d\u8bb8\u591a\u8fd0\u7b97\u7b26\u5b9e\u73b0\u4e3a\u7c7b\u6210\u5458\u3002"]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Description \u63cf\u8ff0"}),(0,r.jsx)(s.th,{children:"Operator \u7b97\u5b50"}),(0,r.jsx)(s.th,{children:"Associativity \u5173\u8054\u6027"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"unary postfix \u4e00\u5143\u540e\u7f00"}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"expr++"})," ",(0,r.jsx)(s.code,{children:"expr--"})," ",(0,r.jsx)(s.code,{children:"()"})," ",(0,r.jsx)(s.code,{children:"[]"})," ",(0,r.jsx)(s.code,{children:"?[]"})," ",(0,r.jsx)(s.code,{children:"."})," ",(0,r.jsx)(s.code,{children:"?."})," ",(0,r.jsx)(s.code,{children:"!"})]}),(0,r.jsx)(s.td,{children:"None \u6ca1\u6709"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"unary prefix \u4e00\u5143\u524d\u7f00"}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"-expr"})," ",(0,r.jsx)(s.code,{children:"!expr"})," ",(0,r.jsx)(s.code,{children:"~expr"})," ",(0,r.jsx)(s.code,{children:"++expr"})," ",(0,r.jsx)(s.code,{children:"--expr"})," ",(0,r.jsx)(s.code,{children:"await expr"})]}),(0,r.jsx)(s.td,{children:"None \u6ca1\u6709"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"multiplicative \u4e58\u6cd5"}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"*"})," ",(0,r.jsx)(s.code,{children:"/"})," ",(0,r.jsx)(s.code,{children:"%"})," ",(0,r.jsx)(s.code,{children:"~/"})]}),(0,r.jsx)(s.td,{children:"Left \u5de6"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"additive \u6dfb\u52a0\u5242"}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"+"})," ",(0,r.jsx)(s.code,{children:"-"})]}),(0,r.jsx)(s.td,{children:"Left \u5de6"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"shift \u8f6c\u53d8"}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"<<"})," ",(0,r.jsx)(s.code,{children:">>"})," ",(0,r.jsx)(s.code,{children:">>>"})]}),(0,r.jsx)(s.td,{children:"Left \u5de6"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"bitwise AND \u6309\u4f4d AND"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"&"})}),(0,r.jsx)(s.td,{children:"Left \u5de6"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"bitwise XOR \u6309\u4f4d\u5f02\u6216"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"^"})}),(0,r.jsx)(s.td,{children:"Left \u5de6"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"bitwise OR \u6309\u4f4d OR"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"|"})}),(0,r.jsx)(s.td,{children:"Left \u5de6"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"relational and type test \u5173\u7cfb\u548c\u578b\u5f0f\u8bd5\u9a8c"}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:">="})," ",(0,r.jsx)(s.code,{children:">"})," ",(0,r.jsx)(s.code,{children:"<="})," ",(0,r.jsx)(s.code,{children:"<"})," ",(0,r.jsx)(s.code,{children:"as"})," ",(0,r.jsx)(s.code,{children:"is"})," ",(0,r.jsx)(s.code,{children:"is!"})]}),(0,r.jsx)(s.td,{children:"None \u6ca1\u6709"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"equality \u5e73\u7b49"}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"=="})," ",(0,r.jsx)(s.code,{children:"!="})]}),(0,r.jsx)(s.td,{children:"None \u6ca1\u6709"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"logical AND logical \u548c"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"&&"})}),(0,r.jsx)(s.td,{children:"Left \u5de6"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"logical OR \u903b\u8f91 OR"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"||"})}),(0,r.jsx)(s.td,{children:"Left \u5de6"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"if null \u5982\u679c\u4e3a null"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"??"})}),(0,r.jsx)(s.td,{children:"Left \u5de6"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"conditional \u6709\u689d\u4ef6\u7684"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"expr1 ? expr2 : expr3"})}),(0,r.jsx)(s.td,{children:"Right \u53f3"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"cascade \u7ea7\u8054"}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:".."})," ",(0,r.jsx)(s.code,{children:"?.."})]}),(0,r.jsx)(s.td,{children:"Left \u5de6"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"assignment \u5206\u914d"}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"="})," ",(0,r.jsx)(s.code,{children:"*="})," ",(0,r.jsx)(s.code,{children:"/="})," ",(0,r.jsx)(s.code,{children:"+="})," ",(0,r.jsx)(s.code,{children:"-="})," ",(0,r.jsx)(s.code,{children:"&="})," ",(0,r.jsx)(s.code,{children:"^="})," \u7b49\u3002"]}),(0,r.jsx)(s.td,{children:"Right \u53f3"})]})]})]}),"\n",(0,r.jsx)(s.admonition,{type:"warning",children:(0,r.jsxs)(s.p,{children:["The previous table should only be used as a helpful guide. The notion of operator precedence and associativity is an approximation of the truth found in the language grammar. You can find the authoritative behavior of Dart\u2019s operator relationships in the grammar defined in the ",(0,r.jsx)(s.a,{href:"https://dart.dev/guides/language/spec",children:"Dart language specification"}),".",(0,r.jsx)(s.br,{}),"\n","\u4e0a\u8868\u4ec5\u5e94\u7528\u4f5c\u6709\u7528\u7684\u6307\u5357\u3002\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u548c\u5173\u8054\u6027\u7684\u6982\u5ff5\u662f\u8bed\u8a00\u8bed\u6cd5\u4e2d\u53d1\u73b0\u7684\u771f\u7406\u7684\u8fd1\u4f3c\u503c\u3002\u4f60\u53ef\u4ee5\u5728 Dart \u8bed\u8a00\u89c4\u8303\u4e2d\u5b9a\u4e49\u7684\u8bed\u6cd5\u4e2d\u627e\u5230 Dart \u8fd0\u7b97\u7b26\u5173\u7cfb\u7684\u6743\u5a01\u884c\u4e3a\u3002"]})}),"\n",(0,r.jsxs)(s.p,{children:["When you use operators, you create expressions. Here are some examples of operator expressions:",(0,r.jsx)(s.br,{}),"\n","\u4f7f\u7528\u8fd0\u7b97\u7b26\u65f6\uff0c\u5c06\u521b\u5efa\u8868\u8fbe\u5f0f\u3002\u4ee5\u4e0b\u662f\u8fd0\u7b97\u7b26\u8868\u8fbe\u5f0f\u7684\u4e00\u4e9b\u793a\u4f8b\uff1a"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"a++\na + b\na = b\na == b\nc ? a : b\na is T\n"})}),"\n",(0,r.jsx)(s.h2,{id:"operator-precedence-example-\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u793a\u4f8b",children:"Operator precedence example \u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u793a\u4f8b"}),"\n",(0,r.jsxs)(s.p,{children:["In the ",(0,r.jsx)(s.a,{href:"https://dart.dev/language/operators#operators",children:"operator table"}),", each operator has higher precedence than the operators in the rows that follow it. For example, the multiplicative operator ",(0,r.jsx)(s.code,{children:"%"})," has higher precedence than (and thus executes before) the equality operator ",(0,r.jsx)(s.code,{children:"=="}),", which has higher precedence than the logical AND operator ",(0,r.jsx)(s.code,{children:"&&"}),". That precedence means that the following two lines of code execute the same way:",(0,r.jsx)(s.br,{}),"\n","\u5728\u8fd0\u7b97\u7b26\u8868\u4e2d\uff0c\u6bcf\u4e2a\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u90fd\u9ad8\u4e8e\u5176\u540e\u9762\u884c\u4e2d\u7684\u8fd0\u7b97\u7b26\u3002\u4f8b\u5982\uff0c\u4e58\u6cd5\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u76f8\u7b49\u8fd0\u7b97\u7b26\uff08\u56e0\u6b64\u5728\u76f8\u7b49\u8fd0\u7b97\u7b26\u4e4b\u524d\u6267\u884c\uff09\uff0c\u76f8\u7b49\u8fd0\u7b97 ",(0,r.jsx)(s.code,{children:"%"})," \u7b26 ",(0,r.jsx)(s.code,{children:"=="})," \u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u903b\u8f91 AND \u8fd0\u7b97\u7b26 ",(0,r.jsx)(s.code,{children:"&&"})," \u3002\u8be5\u4f18\u5148\u7ea7\u610f\u5473\u7740\u4ee5\u4e0b\u4e24\u884c\u4ee3\u7801\u7684\u6267\u884c\u65b9\u5f0f\u76f8\u540c\uff1a"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"// Parentheses improve readability.\nif ((n % i == 0) && (d % i == 0)) ...\n\n// Harder to read, but equivalent.\nif (n % i == 0 && d % i == 0) ...\n"})}),"\n",(0,r.jsx)(s.admonition,{type:"warning",children:(0,r.jsxs)(s.p,{children:["For operators that take two operands, the leftmost operand determines which method is used. For example, if you have a ",(0,r.jsx)(s.code,{children:"Vector"})," object and a ",(0,r.jsx)(s.code,{children:"Point"})," object, then ",(0,r.jsx)(s.code,{children:"aVector + aPoint"})," uses ",(0,r.jsx)(s.code,{children:"Vector"})," addition (",(0,r.jsx)(s.code,{children:"+"}),").",(0,r.jsx)(s.br,{}),"\n","\u5bf9\u4e8e\u91c7\u7528\u4e24\u4e2a\u64cd\u4f5c\u6570\u7684\u8fd0\u7b97\u7b26\uff0c\u6700\u5de6\u8fb9\u7684\u64cd\u4f5c\u6570\u786e\u5b9a\u4f7f\u7528\u54ea\u79cd\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u6709\u4e00\u4e2a ",(0,r.jsx)(s.code,{children:"Vector"})," \u5bf9\u8c61\u548c\u4e00\u4e2a ",(0,r.jsx)(s.code,{children:"Point"})," \u5bf9\u8c61\uff0c\u5219 ",(0,r.jsx)(s.code,{children:"aVector + aPoint"})," \u4f7f\u7528 ",(0,r.jsx)(s.code,{children:"Vector"})," \u52a0\u6cd5 \uff08 ",(0,r.jsx)(s.code,{children:"+"})," \uff09\u3002"]})}),"\n",(0,r.jsx)(s.h2,{id:"arithmetic-operators-\u7b97\u672f\u8fd0\u7b97\u7b26",children:"Arithmetic operators \u7b97\u672f\u8fd0\u7b97\u7b26"}),"\n",(0,r.jsxs)(s.p,{children:["Dart supports the usual arithmetic operators, as shown in the following table.",(0,r.jsx)(s.br,{}),"\n","Dart \u652f\u6301\u5e38\u7528\u7684\u7b97\u672f\u8fd0\u7b97\u7b26\uff0c\u5982\u4e0b\u8868\u6240\u793a\u3002"]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Operator \u7b97\u5b50"}),(0,r.jsx)(s.th,{children:"Meaning \u610f\u4e49"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"+"})}),(0,r.jsx)(s.td,{children:"Add"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"-"})}),(0,r.jsx)(s.td,{children:"Subtract \u51cf\u53bb"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"-expr"})}),(0,r.jsxs)(s.td,{children:["Unary minus, also known as negation (reverse the sign of the expression)",(0,r.jsx)("br",{}),"\u4e00\u5143\u51cf\u53f7\uff0c\u4e5f\u79f0\u4e3a\u5426\u5b9a\uff08\u53cd\u8f6c\u8868\u8fbe\u5f0f\u7684\u7b26\u53f7\uff09"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"*"})}),(0,r.jsx)(s.td,{children:"Multiply \u4e58"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"/"})}),(0,r.jsx)(s.td,{children:"Divide \u5206"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"~/"})}),(0,r.jsxs)(s.td,{children:["Divide, returning an integer result",(0,r.jsx)("br",{}),"\u9664\u6cd5\uff0c\u8fd4\u56de\u6574\u6570\u7ed3\u679c"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"%"})}),(0,r.jsxs)(s.td,{children:["Get the remainder of an integer division (modulo)",(0,r.jsx)("br",{}),"\u83b7\u53d6\u6574\u6570\u9664\u6cd5\uff08\u6a21\uff09\u7684\u4f59\u6570"]})]})]})]}),"\n",(0,r.jsx)(s.p,{children:"Example: \u4f8b\uff1a"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"assert(2 + 3 == 5);\nassert(2 - 3 == -1);\nassert(2 * 3 == 6);\nassert(5 / 2 == 2.5); // Result is a double\nassert(5 ~/ 2 == 2); // Result is an int\nassert(5 % 2 == 1); // Remainder\n\nassert('5/2 = ${5 ~/ 2} r ${5 % 2}' == '5/2 = 2 r 1');\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Dart also supports both prefix and postfix increment and decrement operators.",(0,r.jsx)(s.br,{}),"\n","Dart \u8fd8\u652f\u6301\u524d\u7f00\u548c\u540e\u7f00\u9012\u589e\u548c\u9012\u51cf\u8fd0\u7b97\u7b26\u3002"]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Operator \u7b97\u5b50"}),(0,r.jsx)(s.th,{children:"Meaning \u610f\u4e49"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"++var"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"var = var + 1"})," (expression value is ",(0,r.jsx)(s.code,{children:"var + 1"}),")",(0,r.jsx)("br",{}),(0,r.jsx)(s.code,{children:"var = var + 1"})," \uff08\u8868\u8fbe\u5f0f\u503c\u4e3a ",(0,r.jsx)(s.code,{children:"var + 1"})," \uff09"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"var++"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"var = var + 1"})," (expression value is ",(0,r.jsx)(s.code,{children:"var"}),")",(0,r.jsx)("br",{}),(0,r.jsx)(s.code,{children:"var = var + 1"})," \uff08\u8868\u8fbe\u5f0f\u503c\u4e3a ",(0,r.jsx)(s.code,{children:"var"})," \uff09"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"--var"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"var = var - 1"})," (expression value is ",(0,r.jsx)(s.code,{children:"var - 1"}),")",(0,r.jsx)("br",{}),(0,r.jsx)(s.code,{children:"var = var - 1"})," \uff08\u8868\u8fbe\u5f0f\u503c\u4e3a ",(0,r.jsx)(s.code,{children:"var - 1"})," \uff09"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"var--"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"var = var - 1"})," (expression value is ",(0,r.jsx)(s.code,{children:"var"}),")",(0,r.jsx)("br",{}),(0,r.jsx)(s.code,{children:"var = var - 1"})," \uff08\u8868\u8fbe\u5f0f\u503c\u4e3a ",(0,r.jsx)(s.code,{children:"var"})," \uff09"]})]})]})]}),"\n",(0,r.jsx)(s.p,{children:"Example: \u4f8b\uff1a"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"int a;\nint b;\n\na = 0;\nb = ++a; // Increment a before b gets its value.\nassert(a == b); // 1 == 1\n\na = 0;\nb = a++; // Increment a after b gets its value.\nassert(a != b); // 1 != 0\n\na = 0;\nb = --a; // Decrement a before b gets its value.\nassert(a == b); // -1 == -1\n\na = 0;\nb = a--; // Decrement a after b gets its value.\nassert(a != b); // -1 != 0\n"})}),"\n",(0,r.jsx)(s.h2,{id:"equality-and-relational-operators-\u76f8\u7b49\u548c\u5173\u7cfb\u8fd0\u7b97\u7b26",children:"Equality and relational operators \u76f8\u7b49\u548c\u5173\u7cfb\u8fd0\u7b97\u7b26"}),"\n",(0,r.jsxs)(s.p,{children:["The following table lists the meanings of equality and relational operators.",(0,r.jsx)(s.br,{}),"\n","\u4e0b\u8868\u5217\u51fa\u4e86\u76f8\u7b49\u548c\u5173\u7cfb\u8fd0\u7b97\u7b26\u7684\u542b\u4e49\u3002"]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Operator \u7b97\u5b50"}),(0,r.jsx)(s.th,{children:"Meaning \u610f\u4e49"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"=="})}),(0,r.jsxs)(s.td,{children:["Equal; see discussion below",(0,r.jsx)("br",{}),"\u5e73\u7b49\uff1b\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u8ba8\u8bba"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"!="})}),(0,r.jsx)(s.td,{children:"Not equal \u4e0d\u76f8\u7b49"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:">"})}),(0,r.jsx)(s.td,{children:"Greater than \u5927\u4e8e"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"<"})}),(0,r.jsx)(s.td,{children:"Less than \u5c0f\u4e8e"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:">="})}),(0,r.jsxs)(s.td,{children:["Greater than or equal to",(0,r.jsx)("br",{}),"\u5927\u4e8e\u6216\u7b49\u4e8e"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"<="})}),(0,r.jsxs)(s.td,{children:["Less than or equal to",(0,r.jsx)("br",{}),"\u5c0f\u4e8e\u6216\u7b49\u4e8e"]})]})]})]}),"\n",(0,r.jsxs)(s.p,{children:["To test whether two objects x and y represent the same thing, use the ",(0,r.jsx)(s.code,{children:"=="})," operator. (In the rare case where you need to know whether two objects are the exact same object, use the ",(0,r.jsx)(s.a,{href:"https://api.dart.dev/stable/dart-core/identical.html",children:"identical()"})," function instead.) Here\u2019s how the ",(0,r.jsx)(s.code,{children:"=="})," operator works:",(0,r.jsx)(s.br,{}),"\n","\u82e5\u8981\u6d4b\u8bd5\u4e24\u4e2a\u5bf9\u8c61 x \u548c y \u662f\u5426\u8868\u793a\u540c\u4e00\u4e8b\u7269\uff0c\u8bf7\u4f7f\u7528 ",(0,r.jsx)(s.code,{children:"=="})," \u8fd0\u7b97\u7b26\u3002\uff08\u5728\u6781\u5c11\u6570\u60c5\u51b5\u4e0b\uff0c\u60a8\u9700\u8981\u77e5\u9053\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u5b8c\u5168\u76f8\u540c\u7684\u5bf9\u8c61\uff0c\u8bf7\u6539\u7528 identical\uff08\uff09 \u51fd\u6570\u3002 ",(0,r.jsx)(s.code,{children:"=="})," \u4ee5\u4e0b\u662f\u8fd0\u7b97\u7b26\u7684\u5de5\u4f5c\u65b9\u5f0f\uff1a"]}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["If ",(0,r.jsx)(s.em,{children:"x"})," or ",(0,r.jsx)(s.em,{children:"y"})," is null, return true if both are null, and false if only one is null.",(0,r.jsx)(s.br,{}),"\n","\u5982\u679c x \u6216 y \u4e3a null\uff0c\u5219\u5982\u679c\u4e24\u8005\u90fd\u4e3a null\uff0c\u5219\u8fd4\u56de true\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u4e3a null\uff0c\u5219\u8fd4\u56de false\u3002"]}),"\n",(0,r.jsxs)(s.li,{children:["Return the result of invoking the ",(0,r.jsx)(s.code,{children:"=="})," method on ",(0,r.jsx)(s.em,{children:"x"})," with the argument ",(0,r.jsx)(s.em,{children:"y"}),". (That\u2019s right, operators such as ",(0,r.jsx)(s.code,{children:"=="})," are methods that are invoked on their first operand. For details, see ",(0,r.jsx)(s.a,{href:"https://dart.dev/language/methods#operators",children:"Operators"}),".)",(0,r.jsx)(s.br,{}),"\n","\u8fd4\u56de\u4f7f\u7528\u53c2\u6570 y \u5728 x \u4e0a\u8c03\u7528 ",(0,r.jsx)(s.code,{children:"=="})," \u65b9\u6cd5\u7684\u7ed3\u679c\u3002 \uff08\u6ca1\u9519\uff0c\u8fd0\u7b97\u7b26 such as ",(0,r.jsx)(s.code,{children:"=="})," are \u5728\u5176\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6570\u4e0a\u8c03\u7528\u7684\u65b9\u6cd5\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u8fd0\u7b97\u7b26\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Here\u2019s an example of using each of the equality and relational operators:",(0,r.jsx)(s.br,{}),"\n","\u4e0b\u9762\u662f\u4f7f\u7528\u6bcf\u4e2a\u76f8\u7b49\u548c\u5173\u7cfb\u8fd0\u7b97\u7b26\u7684\u793a\u4f8b\uff1a"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"assert(2 == 2);\nassert(2 != 3);\nassert(3 > 2);\nassert(2 < 3);\nassert(3 >= 3);\nassert(2 <= 3);\n"})}),"\n",(0,r.jsx)(s.h2,{id:"type-test-operators-\u578b\u5f0f\u8bd5\u9a8c\u64cd\u4f5c\u5458",children:"Type test operators \u578b\u5f0f\u8bd5\u9a8c\u64cd\u4f5c\u5458"}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"as"}),", ",(0,r.jsx)(s.code,{children:"is"}),", and ",(0,r.jsx)(s.code,{children:"is!"})," operators are handy for checking types at runtime.",(0,r.jsx)(s.br,{}),"\n",(0,r.jsx)(s.code,{children:"as"})," \u3001 ",(0,r.jsx)(s.code,{children:"is"})," \u548c ",(0,r.jsx)(s.code,{children:"is!"})," \u8fd0\u7b97\u7b26\u5bf9\u4e8e\u5728\u8fd0\u884c\u65f6\u68c0\u67e5\u7c7b\u578b\u975e\u5e38\u65b9\u4fbf\u3002"]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Operator \u7b97\u5b50"}),(0,r.jsx)(s.th,{children:"Meaning \u610f\u4e49"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"as"})}),(0,r.jsxs)(s.td,{children:["Typecast (also used to specify ",(0,r.jsx)(s.a,{href:"https://dart.dev/language/libraries#specifying-a-library-prefix",children:"library prefixes"}),")",(0,r.jsx)("br",{}),"\u7c7b\u578b\u8f6c\u6362\uff08\u4e5f\u7528\u4e8e\u6307\u5b9a\u5e93\u524d\u7f00\uff09"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"is"})}),(0,r.jsxs)(s.td,{children:["True if the object has the specified type",(0,r.jsx)("br",{}),"\u5982\u679c\u5bf9\u8c61\u5177\u6709\u6307\u5b9a\u7684\u7c7b\u578b\uff0c\u5219\u4e3a True"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"is!"})}),(0,r.jsxs)(s.td,{children:["True if the object doesn\u2019t have the specified type",(0,r.jsx)("br",{}),"\u5982\u679c\u5bf9\u8c61\u6ca1\u6709\u6307\u5b9a\u7684\u7c7b\u578b\uff0c\u5219\u4e3a True"]})]})]})]}),"\n",(0,r.jsxs)(s.p,{children:["The result of ",(0,r.jsx)(s.code,{children:"obj is T"})," is true if ",(0,r.jsx)(s.code,{children:"obj"})," implements the interface specified by ",(0,r.jsx)(s.code,{children:"T"}),". For example, ",(0,r.jsx)(s.code,{children:"obj is Object?"})," is always true.",(0,r.jsx)(s.br,{}),"\n","\u5982\u679c ",(0,r.jsx)(s.code,{children:"obj"})," \u5b9e\u73b0 \u6307\u5b9a\u7684 ",(0,r.jsx)(s.code,{children:"T"})," \u63a5\u53e3\uff0c\u5219\u7ed3\u679c ",(0,r.jsx)(s.code,{children:"obj is T"})," \u4e3a true\u3002\u4f8b\u5982\uff0c ",(0,r.jsx)(s.code,{children:"obj is Object?"})," \u59cb\u7ec8\u4e3a true\u3002"]}),"\n",(0,r.jsxs)(s.p,{children:["Use the ",(0,r.jsx)(s.code,{children:"as"})," operator to cast an object to a particular type if and only if you are sure that the object is of that type. Example:",(0,r.jsx)(s.br,{}),"\n","\u5f53\u4e14\u4ec5\u5f53\u786e\u5b9a\u5bf9\u8c61\u5c5e\u4e8e\u8be5\u7c7b\u578b\u65f6\uff0c\u4f7f\u7528 ",(0,r.jsx)(s.code,{children:"as"})," \u8fd0\u7b97\u7b26\u5c06\u5bf9\u8c61\u5f3a\u5236\u8f6c\u6362\u4e3a\u8be5\u7c7b\u578b\u3002\u4f8b\uff1a"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"(employee as Person).firstName = 'Bob';\n"})}),"\n",(0,r.jsxs)(s.p,{children:["If you aren\u2019t sure that the object is of type ",(0,r.jsx)(s.code,{children:"T"}),", then use ",(0,r.jsx)(s.code,{children:"is T"})," to check the type before using the object.",(0,r.jsx)(s.br,{}),"\n","\u5982\u679c\u60a8\u4e0d\u786e\u5b9a\u5bf9\u8c61\u7684\u7c7b\u578b ",(0,r.jsx)(s.code,{children:"T"})," \u662f\u5426\u4e3a \uff0c\u5219\u5728\u4f7f\u7528\u5bf9\u8c61\u4e4b\u524d\u68c0\u67e5 ",(0,r.jsx)(s.code,{children:"is T"})," \u7c7b\u578b\u3002"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"if (employee is Person) {\n  // Type check\n  employee.firstName = 'Bob';\n}\n"})}),"\n",(0,r.jsx)(s.admonition,{type:"note",children:(0,r.jsxs)(s.p,{children:["The code isn\u2019t equivalent. If ",(0,r.jsx)(s.code,{children:"employee"})," is null or not a ",(0,r.jsx)(s.code,{children:"Person"}),", the first example throws an exception; the second does nothing.",(0,r.jsx)(s.br,{}),"\n","\u4ee3\u7801\u4e0d\u7b49\u6548\u3002\u5982\u679c ",(0,r.jsx)(s.code,{children:"employee"})," is null \u6216 not a ",(0,r.jsx)(s.code,{children:"Person"})," \uff0c\u5219\u7b2c\u4e00\u4e2a\u793a\u4f8b\u5c06\u5f15\u53d1\u5f02\u5e38;\u7b2c\u4e8c\u4e2a\u4ec0\u4e48\u90fd\u4e0d\u505a\u3002"]})}),"\n",(0,r.jsx)(s.h2,{id:"assignment-operators-\u8d4b\u503c\u8fd0\u7b97\u7b26",children:"Assignment operators \u8d4b\u503c\u8fd0\u7b97\u7b26"}),"\n",(0,r.jsxs)(s.p,{children:["As you\u2019ve already seen, you can assign values using the ",(0,r.jsx)(s.code,{children:"="})," operator. To assign only if the assigned-to variable is null, use the ",(0,r.jsx)(s.code,{children:"??="})," operator.",(0,r.jsx)(s.br,{}),"\n","\u5982\u60a8\u6240\u89c1\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 ",(0,r.jsx)(s.code,{children:"="})," \u8fd0\u7b97\u7b26\u8d4b\u503c\u3002\u82e5\u8981\u4ec5\u5728 assigned-to \u53d8\u91cf\u4e3a null \u65f6\u8d4b\u503c\uff0c\u8bf7\u4f7f\u7528 ",(0,r.jsx)(s.code,{children:"??="})," \u8fd0\u7b97\u7b26\u3002"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"// Assign value to a\na = value;\n// Assign value to b if b is null; otherwise, b stays the same\nb ??= value;\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Compound assignment operators such as ",(0,r.jsx)(s.code,{children:"+="})," combine an operation with an assignment.",(0,r.jsx)(s.br,{}),"\n","\u590d\u5408\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u4f8b\u5982 ",(0,r.jsx)(s.code,{children:"+="})," \u5c06\u8fd0\u7b97\u4e0e\u8d4b\u503c\u7ec4\u5408\u5728\u4e00\u8d77\u3002"]}),"\n",(0,r.jsx)("div",{style:{columnWidth:"6em"},children:(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"="})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"*="})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"%="})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:">>>="})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"^="})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"+="})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"/="})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"<<="})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"&="})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"|="})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"-="})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"~/="})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:">>="})}),"\n"]})}),"\n",(0,r.jsxs)(s.p,{children:["Here\u2019s how compound assignment operators work:",(0,r.jsx)(s.br,{}),"\n","\u590d\u5408\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u5de5\u4f5c\u539f\u7406\u5982\u4e0b\uff1a"]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{}),(0,r.jsxs)(s.th,{children:["Compound assignment",(0,r.jsx)("br",{}),"\u590d\u5408\u5206\u914d"]}),(0,r.jsxs)(s.th,{children:["Equivalent expression",(0,r.jsx)("br",{}),"\u7b49\u6548\u8868\u8fbe\u5f0f"]})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsxs)(s.strong,{children:["For an operator ",(0,r.jsx)(s.em,{children:"op"}),":",(0,r.jsx)("br",{}),"\u5bf9\u4e8e\u7b97\u5b50\u64cd\u4f5c\uff1a"]})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"a _op_= b"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"a = a _op_ b"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsxs)(s.strong,{children:["Example:",(0,r.jsx)("br",{}),"\u4f8b\uff1a"]})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"a += b"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"a = a + b"})})]})]})]}),"\n",(0,r.jsxs)(s.p,{children:["The following example uses assignment and compound assignment operators:",(0,r.jsx)(s.br,{}),"\n","\u4ee5\u4e0b\u793a\u4f8b\u4f7f\u7528\u8d4b\u503c\u548c\u590d\u5408\u8d4b\u503c\u8fd0\u7b97\u7b26\uff1a"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"var a = 2; // Assign using =\na *= 3; // Assign and multiply: a = a * 3\nassert(a == 6);\n"})}),"\n",(0,r.jsx)(s.h2,{id:"logical-operators-\u903b\u8f91\u8fd0\u7b97\u7b26",children:"Logical operators \u903b\u8f91\u8fd0\u7b97\u7b26"}),"\n",(0,r.jsxs)(s.p,{children:["You can invert or combine boolean expressions using the logical operators.",(0,r.jsx)(s.br,{}),"\n","\u60a8\u53ef\u4ee5\u4f7f\u7528\u903b\u8f91\u8fd0\u7b97\u7b26\u53cd\u8f6c\u6216\u7ec4\u5408\u5e03\u5c14\u8868\u8fbe\u5f0f\u3002"]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Operator \u7b97\u5b50"}),(0,r.jsx)(s.th,{children:"Meaning \u610f\u4e49"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"!expr"})}),(0,r.jsxs)(s.td,{children:["inverts the following expression (changes false to true, and vice versa)",(0,r.jsx)("br",{}),"\u53cd\u8f6c\u4ee5\u4e0b\u8868\u8fbe\u5f0f\uff08\u5c06 false \u66f4\u6539\u4e3a true\uff0c\u53cd\u4e4b\u4ea6\u7136\uff09"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"||"})}),(0,r.jsx)(s.td,{children:"logical OR \u903b\u8f91 OR"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"&&"})}),(0,r.jsx)(s.td,{children:"logical AND logical \u548c"})]})]})]}),"\n",(0,r.jsxs)(s.p,{children:["Here\u2019s an example of using the logical operators:",(0,r.jsx)(s.br,{}),"\n","\u4e0b\u9762\u662f\u4f7f\u7528\u903b\u8f91\u8fd0\u7b97\u7b26\u7684\u793a\u4f8b\uff1a"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"if (!done && (col == 0 || col == 3)) {\n  // ...Do something...\n}\n"})}),"\n",(0,r.jsx)(s.h2,{id:"bitwise-and-shift-operators-\u6309\u4f4d\u8fd0\u7b97\u7b26\u548c\u79fb\u4f4d\u8fd0\u7b97\u7b26",children:"Bitwise and shift operators \u6309\u4f4d\u8fd0\u7b97\u7b26\u548c\u79fb\u4f4d\u8fd0\u7b97\u7b26"}),"\n",(0,r.jsxs)(s.p,{children:["You can manipulate the individual bits of numbers in Dart. Usually, you\u2019d use these bitwise and shift operators with integers.",(0,r.jsx)(s.br,{}),"\n","\u60a8\u53ef\u4ee5\u5728 Dart \u4e2d\u64cd\u4f5c\u6570\u5b57\u7684\u5404\u4e2a\u4f4d\u3002\u901a\u5e38\uff0c\u60a8\u4f1a\u5c06\u8fd9\u4e9b\u6309\u4f4d\u8fd0\u7b97\u7b26\u548c\u79fb\u4f4d\u8fd0\u7b97\u7b26\u4e0e\u6574\u6570\u4e00\u8d77\u4f7f\u7528\u3002"]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Operator \u7b97\u5b50"}),(0,r.jsx)(s.th,{children:"Meaning \u610f\u4e49"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"&"})}),(0,r.jsx)(s.td,{children:"AND"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"|"})}),(0,r.jsx)(s.td,{children:"OR"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"^"})}),(0,r.jsx)(s.td,{children:"XOR"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"~expr"})}),(0,r.jsxs)(s.td,{children:["Unary bitwise complement (0s become 1s; 1s become 0s)",(0,r.jsx)("br",{}),"\u4e00\u5143\u6309\u4f4d\u8865\u7801\uff080 \u53d8\u4e3a 1;1 \u53d8\u4e3a 0\uff09"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"<<"})}),(0,r.jsx)(s.td,{children:"Shift left \u5de6\u79fb"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:">>"})}),(0,r.jsx)(s.td,{children:"Shift right \u53f3\u79fb"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:">>>"})}),(0,r.jsx)(s.td,{children:"Unsigned shift right \u65e0\u7b26\u53f7\u53f3\u79fb"})]})]})]}),"\n",(0,r.jsx)(s.admonition,{type:"note",children:(0,r.jsxs)(s.p,{children:["The behavior of bitwise operations with large or negative operands might differ between platforms. To learn more, check out ",(0,r.jsx)(s.a,{href:"https://dart.dev/guides/language/numbers#bitwise-operations",children:"Bitwise operations platform differences"}),".",(0,r.jsx)(s.br,{}),"\n","\u6ce8\u610f\uff1a\u5177\u6709\u5927\u64cd\u4f5c\u6570\u6216\u8d1f\u64cd\u4f5c\u6570\u7684\u6309\u4f4d\u8fd0\u7b97\u7684\u884c\u4e3a\u53ef\u80fd\u56e0\u5e73\u53f0\u800c\u5f02\u3002\u8981\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b Bitwise \u64cd\u4f5c\u5e73\u53f0\u5dee\u5f02\u3002"]})}),"\n",(0,r.jsxs)(s.p,{children:["Here\u2019s an example of using bitwise and shift operators:",(0,r.jsx)(s.br,{}),"\n","\u4e0b\u9762\u662f\u4f7f\u7528\u6309\u4f4d\u8fd0\u7b97\u7b26\u548c\u79fb\u4f4d\u8fd0\u7b97\u7b26\u7684\u793a\u4f8b\uff1a"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"final value = 0x22;\nfinal bitmask = 0x0f;\n\nassert((value & bitmask) == 0x02); // AND\nassert((value & ~bitmask) == 0x20); // AND NOT\nassert((value | bitmask) == 0x2f); // OR\nassert((value ^ bitmask) == 0x2d); // XOR\n\nassert((value << 4) == 0x220); // Shift left\nassert((value >> 4) == 0x02); // Shift right\n\n// Shift right example that results in different behavior on web\n// because the operand value changes when masked to 32 bits:\nassert((-value >> 4) == -0x03);\n\nassert((value >>> 4) == 0x02); // Unsigned shift right\nassert((-value >>> 4) > 0); // Unsigned shift right\n"})}),"\n",(0,r.jsx)(s.admonition,{title:"\u7248\u672c\u8bf4\u660e",type:"tip",children:(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:">>>"})," operator (known as ",(0,r.jsx)(s.em,{children:"triple-shift"})," or ",(0,r.jsx)(s.em,{children:"unsigned shift"}),") requires a ",(0,r.jsx)(s.a,{href:"https://dart.dev/guides/language/evolution#language-versioning",children:"language version"})," of at least 2.14.",(0,r.jsx)(s.br,{}),"\n",(0,r.jsx)(s.code,{children:">>>"})," \u8fd0\u7b97\u7b26\uff08\u79f0\u4e3a\u4e09\u73ed\u6216\u65e0\u7b26\u53f7\u73ed\uff09\u9700\u8981\u81f3\u5c11 2.14 \u7684\u8bed\u8a00\u7248\u672c\u3002"]})}),"\n",(0,r.jsx)(s.h2,{id:"conditional-expressions-\u6761\u4ef6\u8868\u8fbe\u5f0f",children:"Conditional expressions \u6761\u4ef6\u8868\u8fbe\u5f0f"}),"\n",(0,r.jsxs)(s.p,{children:["Dart has two operators that let you concisely evaluate expressions that might otherwise require ",(0,r.jsx)(s.a,{href:"https://dart.dev/language/branches#if",children:"if-else"})," statements:",(0,r.jsx)(s.br,{}),"\n","Dart \u6709\u4e24\u4e2a\u8fd0\u7b97\u7b26\uff0c\u53ef\u4ee5\u8ba9\u4f60\u7b80\u6d01\u5730\u8ba1\u7b97\u53ef\u80fd\u9700\u8981 if-else \u8bed\u53e5\u7684\u8868\u8fbe\u5f0f\uff1a"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"condition ? expr1 : expr2"})}),"\n",(0,r.jsxs)(s.p,{children:["If condition is true, evaluates expr1 (and returns its value); otherwise, evaluates and returns the value of expr2.",(0,r.jsx)(s.br,{}),"\n","\u5982\u679c\u6761\u4ef6\u4e3a true\uff0c\u5219\u8ba1\u7b97 expr1\uff08\u5e76\u8fd4\u56de\u5176\u503c\uff09;\u5426\u5219\uff0c\u8ba1\u7b97\u5e76\u8fd4\u56de expr2 \u7684\u503c\u3002"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"expr1 ?? expr2"})}),"\n",(0,r.jsxs)(s.p,{children:["If expr1 is non-null, returns its value; otherwise, evaluates and returns the value of expr2.",(0,r.jsx)(s.br,{}),"\n","\u5982\u679c expr1 \u4e3a\u975e null\uff0c\u5219\u8fd4\u56de\u5176\u503c;\u5426\u5219\uff0c\u8ba1\u7b97\u5e76\u8fd4\u56de expr2 \u7684\u503c\u3002"]}),"\n",(0,r.jsxs)(s.p,{children:["When you need to assign a value based on a boolean expression, consider using ",(0,r.jsx)(s.code,{children:"?"})," and ",(0,r.jsx)(s.code,{children:":"}),".",(0,r.jsx)(s.br,{}),"\n","\u5f53\u60a8\u9700\u8981\u6839\u636e\u5e03\u5c14\u8868\u8fbe\u5f0f\u8d4b\u503c\u65f6\uff0c\u8bf7\u8003\u8651\u4f7f\u7528 ",(0,r.jsx)(s.code,{children:"?"})," \u548c ",(0,r.jsx)(s.code,{children:":"})," \u3002"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"var visibility = isPublic ? 'public' : 'private';\n"})}),"\n",(0,r.jsxs)(s.p,{children:["If the boolean expression tests for null, consider using ",(0,r.jsx)(s.code,{children:"??"}),".",(0,r.jsx)(s.br,{}),"\n","\u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f\u6d4b\u8bd5 null\uff0c\u8bf7\u8003\u8651\u4f7f\u7528 ",(0,r.jsx)(s.code,{children:"??"})," ."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"String playerName(String? name) => name ?? 'Guest';\n"})}),"\n",(0,r.jsxs)(s.p,{children:["The previous example could have been written at least two other ways, but not as succinctly:",(0,r.jsx)(s.br,{}),"\n","\u524d\u9762\u7684\u4f8b\u5b50\u81f3\u5c11\u53ef\u4ee5\u7528\u53e6\u5916\u4e24\u79cd\u65b9\u5f0f\u7f16\u5199\uff0c\u4f46\u4e0d\u4f1a\u90a3\u4e48\u7b80\u6d01\uff1a"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"// Slightly longer version uses ?: operator.\nString playerName(String? name) => name != null ? name : 'Guest';\n\n// Very long version uses if-else statement.\nString playerName(String? name) {\n  if (name != null) {\n    return name;\n  } else {\n    return 'Guest';\n  }\n}\n"})}),"\n",(0,r.jsx)(s.h2,{id:"cascade-notation-\u7ea7\u8054\u8868\u793a\u6cd5",children:"Cascade notation \u7ea7\u8054\u8868\u793a\u6cd5"}),"\n",(0,r.jsxs)(s.p,{children:["Cascades (",(0,r.jsx)(s.code,{children:".."}),", ",(0,r.jsx)(s.code,{children:"?.."}),") allow you to make a sequence of operations on the same object. In addition to accessing instance members, you can also call instance methods on that same object. This often saves you the step of creating a temporary variable and allows you to write more fluid code.",(0,r.jsx)(s.br,{}),"\n","\u7ea7\u8054 \uff08 ",(0,r.jsx)(s.code,{children:".."})," \uff0c ",(0,r.jsx)(s.code,{children:"?.."})," \uff09 \u5141\u8bb8\u60a8\u5bf9\u540c\u4e00\u5bf9\u8c61\u8fdb\u884c\u4e00\u7cfb\u5217\u64cd\u4f5c\u3002\u9664\u4e86\u8bbf\u95ee\u5b9e\u4f8b\u6210\u5458\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u5bf9\u540c\u4e00\u5bf9\u8c61\u8c03\u7528\u5b9e\u4f8b\u65b9\u6cd5\u3002\u8fd9\u901a\u5e38\u53ef\u4ee5\u8282\u7701\u521b\u5efa\u4e34\u65f6\u53d8\u91cf\u7684\u6b65\u9aa4\uff0c\u5e76\u5141\u8bb8\u60a8\u7f16\u5199\u66f4\u6d41\u7545\u7684\u4ee3\u7801\u3002"]}),"\n",(0,r.jsxs)(s.p,{children:["Consider the following code:",(0,r.jsx)(s.br,{}),"\n","\u8bf7\u8003\u8651\u4ee5\u4e0b\u4ee3\u7801\uff1a"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"var paint = Paint()\n  ..color = Colors.black\n  ..strokeCap = StrokeCap.round\n  ..strokeWidth = 5.0;\n"})}),"\n",(0,r.jsxs)(s.p,{children:["The constructor, ",(0,r.jsx)(s.code,{children:"Paint()"}),", returns a ",(0,r.jsx)(s.code,{children:"Paint"})," object. The code that follows the cascade notation operates on this object, ignoring any values that might be returned.",(0,r.jsx)(s.br,{}),"\n","\u6784\u9020\u51fd\u6570 \uff0c ",(0,r.jsx)(s.code,{children:"Paint()"})," \u8fd4\u56de\u4e00\u4e2a ",(0,r.jsx)(s.code,{children:"Paint"})," \u5bf9\u8c61\u3002\u7ea7\u8054\u8868\u793a\u6cd5\u540e\u9762\u7684\u4ee3\u7801\u5bf9\u6b64\u5bf9\u8c61\u8fdb\u884c\u64cd\u4f5c\uff0c\u5ffd\u7565\u53ef\u80fd\u8fd4\u56de\u7684\u4efb\u4f55\u503c\u3002"]}),"\n",(0,r.jsxs)(s.p,{children:["The previous example is equivalent to this code:",(0,r.jsx)(s.br,{}),"\n","\u524d\u9762\u7684\u793a\u4f8b\u7b49\u6548\u4e8e\u4ee5\u4e0b\u4ee3\u7801\uff1a"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"var paint = Paint();\npaint.color = Colors.black;\npaint.strokeCap = StrokeCap.round;\npaint.strokeWidth = 5.0;\n"})}),"\n",(0,r.jsxs)(s.p,{children:["If the object that the cascade operates on can be null, then use a ",(0,r.jsx)(s.em,{children:"null-shorting"})," cascade (",(0,r.jsx)(s.code,{children:"?.."}),") for the first operation. Starting with ",(0,r.jsx)(s.code,{children:"?.."})," guarantees that none of the cascade operations are attempted on that null object.",(0,r.jsx)(s.br,{}),"\n","\u5982\u679c\u7ea7\u8054\u64cd\u4f5c\u7684\u5bf9\u8c61\u53ef\u4ee5\u4e3a null\uff0c\u5219\u4f7f\u7528\u7a7a\u77ed\u8def\u7ea7\u8054 \uff08 ",(0,r.jsx)(s.code,{children:"?.."})," \uff09 \u8fdb\u884c\u7b2c\u4e00\u6b21\u64cd\u4f5c\u3002\u4ece \u5f00\u59cb ",(0,r.jsx)(s.code,{children:"?.."})," \u4fdd\u8bc1\u4e0d\u4f1a\u5c1d\u8bd5\u5bf9\u8be5 null \u5bf9\u8c61\u6267\u884c\u4efb\u4f55\u7ea7\u8054\u64cd\u4f5c\u3002"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"querySelector('#confirm') // Get an object.\n  ?..text = 'Confirm' // Use its members.\n  ..classes.add('important')\n  ..onClick.listen((e) => window.alert('Confirmed!'))\n  ..scrollIntoView();\n"})}),"\n",(0,r.jsx)(s.admonition,{title:"\u7248\u672c\u8bf4\u660e",type:"tip",children:(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"?.."})," syntax requires a ",(0,r.jsx)(s.a,{href:"https://dart.dev/guides/language/evolution#language-versioning",children:"language version"})," of at least 2.12.",(0,r.jsx)(s.br,{}),"\n","\u8bed\u6cd5 ",(0,r.jsx)(s.code,{children:"?.."})," \u8981\u6c42\u8bed\u8a00\u7248\u672c\u81f3\u5c11\u4e3a 2.12\u3002"]})}),"\n",(0,r.jsxs)(s.p,{children:["The previous code is equivalent to the following:",(0,r.jsx)(s.br,{}),"\n","\u524d\u9762\u7684\u4ee3\u7801\u7b49\u6548\u4e8e\u4ee5\u4e0b\u5185\u5bb9\uff1a"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"var button = querySelector('#confirm');\nbutton?.text = 'Confirm';\nbutton?.classes.add('important');\nbutton?.onClick.listen((e) => window.alert('Confirmed!'));\nbutton?.scrollIntoView();\n"})}),"\n",(0,r.jsxs)(s.p,{children:["You can also nest cascades. For example:",(0,r.jsx)(s.br,{}),"\n","\u8fd8\u53ef\u4ee5\u5d4c\u5957\u7ea7\u8054\u3002\u4f8b\u5982\uff1a"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"final addressBook = (AddressBookBuilder()\n      ..name = 'jenny'\n      ..email = 'jenny@example.com'\n      ..phone = (PhoneNumberBuilder()\n            ..number = '415-555-0100'\n            ..label = 'home')\n          .build())\n    .build();\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Be careful to construct your cascade on a function that returns an actual object. For example, the following code fails:",(0,r.jsx)(s.br,{}),"\n","\u5728\u8fd4\u56de\u5b9e\u9645\u5bf9\u8c61\u7684\u51fd\u6570\u4e0a\u6784\u9020\u7ea7\u8054\u65f6\u8981\u5c0f\u5fc3\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u5931\u8d25\uff1a"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-dart",children:"var sb = StringBuffer();\nsb.write('foo')\n  ..write('bar'); // Error: method 'write' isn't defined for 'void'.\n"})}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"sb.write()"})," call returns void, and you can\u2019t construct a cascade on ",(0,r.jsx)(s.code,{children:"void"}),".",(0,r.jsx)(s.br,{}),"\n",(0,r.jsx)(s.code,{children:"sb.write()"})," \u8c03\u7528\u8fd4\u56de void\uff0c\u5e76\u4e14\u65e0\u6cd5\u5728 \u4e0a ",(0,r.jsx)(s.code,{children:"void"})," \u6784\u9020\u7ea7\u8054\u3002"]}),"\n",(0,r.jsx)(s.admonition,{type:"note",children:(0,r.jsxs)(s.p,{children:["Strictly speaking, the \u201cdouble dot\u201d notation for cascades isn\u2019t an operator. It\u2019s just part of the Dart syntax.",(0,r.jsx)(s.br,{}),"\n","\u4e25\u683c\u6765\u8bf4\uff0c\u7ea7\u8054\u7684\u201c\u53cc\u70b9\u201d\u8868\u793a\u6cd5\u4e0d\u662f\u8fd0\u7b97\u7b26\u3002\u8fd9\u53ea\u662f Dart \u8bed\u6cd5\u7684\u4e00\u90e8\u5206\u3002"]})}),"\n",(0,r.jsx)(s.h2,{id:"other-operators-\u5176\u4ed6\u8fd0\u8425\u5546",children:"Other operators \u5176\u4ed6\u8fd0\u8425\u5546"}),"\n",(0,r.jsxs)(s.p,{children:["You\u2019ve seen most of the remaining operators in other examples:",(0,r.jsx)(s.br,{}),"\n","\u5728\u5176\u4ed6\u793a\u4f8b\u4e2d\uff0c\u60a8\u5df2\u7ecf\u770b\u5230\u4e86\u5927\u591a\u6570\u5269\u4f59\u7684\u8fd0\u7b97\u7b26\uff1a"]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Operator \u7b97\u5b50"}),(0,r.jsx)(s.th,{children:"Name \u540d\u5b57"}),(0,r.jsx)(s.th,{children:"Meaning \u610f\u4e49"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"()"})}),(0,r.jsx)(s.td,{children:"Function application \u529f\u80fd\u5e94\u7528"}),(0,r.jsx)(s.td,{children:"Represents a function call \u8868\u793a\u51fd\u6570\u8c03\u7528"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"[]"})}),(0,r.jsx)(s.td,{children:"Subscript access \u4e0b\u6807\u8bbf\u95ee"}),(0,r.jsxs)(s.td,{children:["Represents a call to the overridable ",(0,r.jsx)(s.code,{children:"[]"})," operator; example: ",(0,r.jsx)(s.code,{children:"fooList[1]"})," passes the int ",(0,r.jsx)(s.code,{children:"1"})," to ",(0,r.jsx)(s.code,{children:"fooList"})," to access the element at index ",(0,r.jsx)(s.code,{children:"1"}),(0,r.jsx)("br",{}),"\u8868\u793a\u5bf9\u53ef ",(0,r.jsx)(s.code,{children:"[]"})," \u91cd\u5199\u8fd0\u7b97\u7b26\u7684\u8c03\u7528;\u793a\u4f8b\uff1a ",(0,r.jsx)(s.code,{children:"fooList[1]"})," \u5c06 int ",(0,r.jsx)(s.code,{children:"1"})," \u4f20\u9012\u7ed9 ",(0,r.jsx)(s.code,{children:"fooList"})," \u4ee5\u8bbf\u95ee\u7d22\u5f15 ",(0,r.jsx)(s.code,{children:"1"})," \u5904\u7684\u5143\u7d20"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"?[]"})}),(0,r.jsx)(s.td,{children:"Conditional subscript access \u6709\u6761\u4ef6\u7684\u4e0b\u6807\u8bbf\u95ee"}),(0,r.jsxs)(s.td,{children:["Like ",(0,r.jsx)(s.code,{children:"[]"}),", but the leftmost operand can be null; example: ",(0,r.jsx)(s.code,{children:"fooList?[1]"})," passes the int ",(0,r.jsx)(s.code,{children:"1"})," to ",(0,r.jsx)(s.code,{children:"fooList"})," to access the element at index ",(0,r.jsx)(s.code,{children:"1"})," unless ",(0,r.jsx)(s.code,{children:"fooList"})," is null (in which case the expression evaluates to null)",(0,r.jsx)("br",{}),"\u50cf \uff0c ",(0,r.jsx)(s.code,{children:"[]"})," \u4f46\u6700\u5de6\u8fb9\u7684\u64cd\u4f5c\u6570\u53ef\u4ee5\u662f\u7a7a\u7684;\u793a\u4f8b\uff1a ",(0,r.jsx)(s.code,{children:"fooList?[1]"})," \u5c06 int ",(0,r.jsx)(s.code,{children:"1"})," \u4f20\u9012\u7ed9 ",(0,r.jsx)(s.code,{children:"fooList"})," \u4ee5\u8bbf\u95ee\u7d22\u5f15 ",(0,r.jsx)(s.code,{children:"1"})," \u5904\u7684\u5143\u7d20\uff0c\u9664\u975e ",(0,r.jsx)(s.code,{children:"fooList"})," \u4e3a null\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\u7ed3\u679c\u4e3a null\uff09"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"."})}),(0,r.jsx)(s.td,{children:"Member access \u4f1a\u5458\u8bbf\u95ee"}),(0,r.jsxs)(s.td,{children:["Refers to a property of an expression; example: ",(0,r.jsx)(s.code,{children:"foo.bar"})," selects property ",(0,r.jsx)(s.code,{children:"bar"})," from expression ",(0,r.jsx)(s.code,{children:"foo"}),(0,r.jsx)("br",{}),"\u6307\u8868\u8fbe\u5f0f\u7684\u5c5e\u6027;\u793a\u4f8b\uff1a ",(0,r.jsx)(s.code,{children:"foo.bar"})," \u4ece\u8868\u8fbe\u5f0f ",(0,r.jsx)(s.code,{children:"foo"})," \u4e2d\u9009\u62e9\u5c5e\u6027 ",(0,r.jsx)(s.code,{children:"bar"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"?."})}),(0,r.jsx)(s.td,{children:"Conditional member access \u6761\u4ef6\u6210\u5458\u8bbf\u95ee"}),(0,r.jsxs)(s.td,{children:["Like ",(0,r.jsx)(s.code,{children:"."}),", but the leftmost operand can be null; example: ",(0,r.jsx)(s.code,{children:"foo?.bar"})," selects property ",(0,r.jsx)(s.code,{children:"bar"})," from expression ",(0,r.jsx)(s.code,{children:"foo"})," unless ",(0,r.jsx)(s.code,{children:"foo"})," is null (in which case the value of ",(0,r.jsx)(s.code,{children:"foo?.bar"})," is null)",(0,r.jsx)("br",{}),"\u50cf \uff0c ",(0,r.jsx)(s.code,{children:"."})," \u4f46\u6700\u5de6\u8fb9\u7684\u64cd\u4f5c\u6570\u53ef\u4ee5\u662f\u7a7a\u7684;\u793a\u4f8b\uff1a ",(0,r.jsx)(s.code,{children:"foo?.bar"})," \u4ece\u8868\u8fbe\u5f0f ",(0,r.jsx)(s.code,{children:"foo"})," \u4e2d\u9009\u62e9\u5c5e\u6027 ",(0,r.jsx)(s.code,{children:"bar"})," \uff0c\u9664\u975e ",(0,r.jsx)(s.code,{children:"foo"})," \u4e3a null\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u503c ",(0,r.jsx)(s.code,{children:"foo?.bar"})," \u4e3a null\uff09"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"!"})}),(0,r.jsx)(s.td,{children:"Null assertion operator Null \u65ad\u8a00\u8fd0\u7b97\u7b26"}),(0,r.jsxs)(s.td,{children:["Casts an expression to its underlying non-nullable type, throwing a runtime exception if the cast fails; example: ",(0,r.jsx)(s.code,{children:"foo!.bar"})," asserts ",(0,r.jsx)(s.code,{children:"foo"})," is non-null and selects the property ",(0,r.jsx)(s.code,{children:"bar"}),", unless ",(0,r.jsx)(s.code,{children:"foo"})," is null in which case a runtime exception is thrown",(0,r.jsx)("br",{}),"\u5c06\u8868\u8fbe\u5f0f\u5f3a\u5236\u8f6c\u6362\u4e3a\u5176\u57fa\u7840\u4e0d\u53ef\u4e3a null \u7c7b\u578b\uff0c\u5982\u679c\u5f3a\u5236\u8f6c\u6362\u5931\u8d25\uff0c\u5219\u5f15\u53d1\u8fd0\u884c\u65f6\u5f02\u5e38;\u793a\u4f8b\uff1a ",(0,r.jsx)(s.code,{children:"foo!.bar"})," asserts ",(0,r.jsx)(s.code,{children:"foo"})," \u4e3a\u975e null \u5e76\u9009\u62e9\u5c5e\u6027 ",(0,r.jsx)(s.code,{children:"bar"})," \uff0c\u9664\u975e ",(0,r.jsx)(s.code,{children:"foo"})," \u4e3a null\uff0c\u5426\u5219\u5c06\u5f15\u53d1\u8fd0\u884c\u65f6\u5f02\u5e38"]})]})]})]}),"\n",(0,r.jsxs)(s.p,{children:["For more information about the ",(0,r.jsx)(s.code,{children:"."}),", ",(0,r.jsx)(s.code,{children:"?."}),", and ",(0,r.jsx)(s.code,{children:".."})," operators, see ",(0,r.jsx)(s.a,{href:"https://dart.dev/language/classes",children:"Classes"}),".",(0,r.jsx)(s.br,{}),"\n","\u6709\u5173 ",(0,r.jsx)(s.code,{children:"."})," \u3001 ",(0,r.jsx)(s.code,{children:"?."})," \u548c ",(0,r.jsx)(s.code,{children:".."})," \u8fd0\u7b97\u7b26\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u7c7b\u3002"]})]})}function h(e={}){const{wrapper:s}={...(0,d.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},47214:function(e,s,n){n.d(s,{Z:function(){return c},a:function(){return t}});var r=n(50959);const d={},i=r.createContext(d);function t(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);