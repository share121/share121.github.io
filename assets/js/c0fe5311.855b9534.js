"use strict";(self.webpackChunkany_doc=self.webpackChunkany_doc||[]).push([[6906],{46530:function(e,n,s){s.r(n),s.d(n,{assets:function(){return d},contentTitle:function(){return i},default:function(){return h},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return l}});var r=s(11527),t=s(67541);const a={last_update:{date:1702179502788}},i="Dart \u7b80\u4ecb",c={id:"codeing/dart-tutorials/index",title:"Dart \u7b80\u4ecb",description:"This page provides a brief introduction to the Dart language through samples of its main features.",source:"@site/docs/09-codeing/13-dart-tutorials/index.md",sourceDirName:"09-codeing/13-dart-tutorials",slug:"/codeing/dart-tutorials/",permalink:"/codeing/dart-tutorials/",draft:!1,unlisted:!1,editUrl:"https://github.com/share121/share121.github.io/edit/main/docs/09-codeing/13-dart-tutorials/index.md",tags:[],version:"current",lastUpdatedBy:"share121",lastUpdatedAt:1702179502.788,formattedLastUpdatedAt:"2023\u5e7412\u670810\u65e5",frontMatter:{last_update:{date:1702179502788}},sidebar:"tutorialSidebar",previous:{title:"\u6846\u67b6 Vue \u4ece\u5165\u95e8\u5230\u624b\u6495",permalink:"/codeing/\u5927\u5e08\u8bfe/\u6846\u67b6 Vue \u4ece\u5165\u95e8\u5230\u624b\u6495"},next:{title:"\u53d8\u91cf",permalink:"/codeing/dart-tutorials/variables"}},d={},l=[{value:"Hello World \u4e16\u754c\u60a8\u597d",id:"hello-world-\u4e16\u754c\u60a8\u597d",level:2},{value:"Variables \u53d8\u91cf",id:"variables-\u53d8\u91cf",level:2},{value:"Control flow statements \u63a7\u5236\u6d41\u8bed\u53e5",id:"control-flow-statements-\u63a7\u5236\u6d41\u8bed\u53e5",level:2},{value:"Functions \u529f\u80fd",id:"functions-\u529f\u80fd",level:2},{value:"Comments \u8bc4\u8bba",id:"comments-\u8bc4\u8bba",level:2},{value:"Imports \u8fdb\u53e3",id:"imports-\u8fdb\u53e3",level:2},{value:"Classes \u7c7b",id:"classes-\u7c7b",level:2},{value:"Enums \u679a\u4e3e",id:"enums-\u679a\u4e3e",level:2},{value:"Inheritance \u9057\u4ea7",id:"inheritance-\u9057\u4ea7",level:2},{value:"Mixins \u6df7\u5408",id:"mixins-\u6df7\u5408",level:2},{value:"Interfaces and abstract classes",id:"interfaces-and-abstract-classes",level:2},{value:"Async \u5f02\u6b65",id:"async-\u5f02\u6b65",level:2},{value:"Exceptions \u5f02\u5e38",id:"exceptions-\u5f02\u5e38",level:2},{value:"Important concepts \u91cd\u8981\u6982\u5ff5",id:"important-concepts-\u91cd\u8981\u6982\u5ff5",level:2},{value:"Additional resources \u5176\u4ed6\u8d44\u6e90",id:"additional-resources-\u5176\u4ed6\u8d44\u6e90",level:2}];function o(e){const n={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"dart-\u7b80\u4ecb",children:"Dart \u7b80\u4ecb"}),"\n",(0,r.jsxs)(n.p,{children:["This page provides a brief introduction to the Dart language through samples of its main features.",(0,r.jsx)(n.br,{}),"\n","\u672c\u9875\u901a\u8fc7 Dart \u8bed\u8a00\u7684\u4e3b\u8981\u529f\u80fd\u793a\u4f8b\u5bf9 Dart \u8bed\u8a00\u8fdb\u884c\u4e86\u7b80\u8981\u4ecb\u7ecd\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:["To learn more about the Dart language, visit the in-depth, individual topic pages listed under ",(0,r.jsx)(n.strong,{children:"Language"})," in the left side menu.",(0,r.jsx)(n.br,{}),"\n","\u8981\u4e86\u89e3\u6709\u5173 Dart \u8bed\u8a00\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee\u5de6\u4fa7\u83dc\u5355\u4e2d\u201c\u8bed\u8a00\u201d\u4e0b\u5217\u51fa\u7684\u6df1\u5165\u7684\u5404\u4e2a\u4e3b\u9898\u9875\u9762\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:["For coverage of Dart\u2019s core libraries, check out the ",(0,r.jsx)(n.a,{href:"https://dart.dev/guides/libraries/library-tour",children:"library tour"}),". You can also visit the ",(0,r.jsx)(n.a,{href:"https://dart.dev/codelabs/dart-cheatsheet",children:"Dart cheatsheet codelab"}),", for a more hands-on introduction.",(0,r.jsx)(n.br,{}),"\n","\u6709\u5173 Dart \u6838\u5fc3\u5e93\u7684\u62a5\u9053\uff0c\u8bf7\u67e5\u770b\u56fe\u4e66\u9986\u5bfc\u89c8\u3002\u60a8\u8fd8\u53ef\u4ee5\u8bbf\u95ee Dart \u5907\u5fd8\u5355 Codelab\uff0c\u83b7\u53d6\u66f4\u591a\u52a8\u624b\u4ecb\u7ecd\u3002"]}),"\n",(0,r.jsx)(n.h2,{id:"hello-world-\u4e16\u754c\u60a8\u597d",children:"Hello World \u4e16\u754c\u60a8\u597d"}),"\n",(0,r.jsxs)(n.p,{children:["Every app requires the top-level ",(0,r.jsx)(n.code,{children:"main()"})," function, where execution starts. Functions that don\u2019t explicitly return a value have the ",(0,r.jsx)(n.code,{children:"void"})," return type. To display text on the console, you can use the top-level ",(0,r.jsx)(n.code,{children:"print()"})," function:",(0,r.jsx)(n.br,{}),"\n","\u6bcf\u4e2a\u5e94\u7528\u90fd\u9700\u8981\u9876\u7ea7\u51fd\u6570\uff0c\u4ece\u8be5 ",(0,r.jsx)(n.code,{children:"main()"})," \u51fd\u6570\u5f00\u59cb\u6267\u884c\u3002\u4e0d\u663e\u5f0f\u8fd4\u56de\u503c\u7684\u51fd\u6570\u5177\u6709 ",(0,r.jsx)(n.code,{children:"void"})," \u8fd4\u56de\u7c7b\u578b\u3002\u82e5\u8981\u5728\u63a7\u5236\u53f0\u4e0a\u663e\u793a\u6587\u672c\uff0c\u53ef\u4ee5\u4f7f\u7528\u9876\u7ea7 ",(0,r.jsx)(n.code,{children:"print()"})," \u51fd\u6570\uff1a"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"void main() {\n  print('Hello, World!');\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Read more about ",(0,r.jsxs)(n.a,{href:"https://dart.dev/language/functions#the-main-function",children:["the ",(0,r.jsx)(n.code,{children:"main()"})," function"]})," in Dart, including optional parameters for command-line arguments.",(0,r.jsx)(n.br,{}),"\n","\u9605\u8bfb\u6709\u5173 Dart \u4e2d ",(0,r.jsx)(n.code,{children:"main()"})," \u51fd\u6570\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u5305\u62ec\u547d\u4ee4\u884c\u53c2\u6570\u7684\u53ef\u9009\u53c2\u6570\u3002"]}),"\n",(0,r.jsx)(n.h2,{id:"variables-\u53d8\u91cf",children:"Variables \u53d8\u91cf"}),"\n",(0,r.jsxs)(n.p,{children:["Even in ",(0,r.jsx)(n.a,{href:"https://dart.dev/language/type-system",children:"type-safe"})," Dart code, you can declare most variables without explicitly specifying their type using ",(0,r.jsx)(n.code,{children:"var"}),". Thanks to type inference, these variables\u2019 types are determined by their initial values:",(0,r.jsx)(n.br,{}),"\n","\u5373\u4f7f\u5728\u7c7b\u578b\u5b89\u5168\u7684 Dart \u4ee3\u7801\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u58f0\u660e\u5927\u591a\u6570\u53d8\u91cf\uff0c\u800c\u65e0\u9700\u4f7f\u7528 ",(0,r.jsx)(n.code,{children:"var"})," \u663e\u5f0f\u6307\u5b9a\u5176\u7c7b\u578b\u3002\u7531\u4e8e\u7c7b\u578b\u63a8\u65ad\uff0c\u8fd9\u4e9b\u53d8\u91cf\u7684\u7c7b\u578b\u7531\u5176\u521d\u59cb\u503c\u51b3\u5b9a\uff1a"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"var name = 'Voyager I';\nvar year = 1977;\nvar antennaDiameter = 3.7;\nvar flybyObjects = ['Jupiter', 'Saturn', 'Uranus', 'Neptune'];\nvar image = {\n  'tags': ['saturn'],\n  'url': '//path/to/saturn.jpg'\n};\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://dart.dev/language/variables",children:"Read more"})," about variables in Dart, including default values, the ",(0,r.jsx)(n.code,{children:"final"})," and ",(0,r.jsx)(n.code,{children:"const"})," keywords, and static types.",(0,r.jsx)(n.br,{}),"\n","\u9605\u8bfb\u6709\u5173 Dart \u4e2d\u7684\u53d8\u91cf\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u5305\u62ec\u9ed8\u8ba4\u503c\u3001 ",(0,r.jsx)(n.code,{children:"final"})," \u548c ",(0,r.jsx)(n.code,{children:"const"})," \u5173\u952e\u5b57\u4ee5\u53ca\u9759\u6001\u7c7b\u578b\u3002"]}),"\n",(0,r.jsx)(n.h2,{id:"control-flow-statements-\u63a7\u5236\u6d41\u8bed\u53e5",children:"Control flow statements \u63a7\u5236\u6d41\u8bed\u53e5"}),"\n",(0,r.jsxs)(n.p,{children:["Dart supports the usual control flow statements:",(0,r.jsx)(n.br,{}),"\n","Dart \u652f\u6301\u5e38\u7528\u7684\u63a7\u5236\u6d41\u8bed\u53e5\uff1a"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"if (year >= 2001) {\n  print('21st century');\n} else if (year >= 1901) {\n  print('20th century');\n}\n\nfor (final object in flybyObjects) {\n  print(object);\n}\n\nfor (int month = 1; month <= 12; month++) {\n  print(month);\n}\n\nwhile (year < 2016) {\n  year += 1;\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Read more about control flow statements in Dart, including ",(0,r.jsxs)(n.a,{href:"https://dart.dev/language/loops",children:[(0,r.jsx)(n.code,{children:"break"})," and ",(0,r.jsx)(n.code,{children:"continue"})]}),", ",(0,r.jsxs)(n.a,{href:"https://dart.dev/language/branches",children:[(0,r.jsx)(n.code,{children:"switch"})," and ",(0,r.jsx)(n.code,{children:"case"})]}),", and ",(0,r.jsx)(n.a,{href:"https://dart.dev/language/error-handling#assert",children:(0,r.jsx)(n.code,{children:"assert"})}),".",(0,r.jsx)(n.br,{}),"\n","\u9605\u8bfb\u6709\u5173 Dart \u4e2d\u7684\u63a7\u5236\u6d41\u8bed\u53e5\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u5305\u62ec ",(0,r.jsx)(n.code,{children:"break"})," \u548c \u3001 ",(0,r.jsx)(n.code,{children:"switch"})," \u548c ",(0,r.jsx)(n.code,{children:"case"})," ",(0,r.jsx)(n.code,{children:"assert"})," ",(0,r.jsx)(n.code,{children:"continue"})," \u3002"]}),"\n",(0,r.jsx)(n.h2,{id:"functions-\u529f\u80fd",children:"Functions \u529f\u80fd"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://dart.dev/effective-dart/design#types",children:"We recommend"})," specifying the types of each function\u2019s arguments and return value:",(0,r.jsx)(n.br,{}),"\n","\u5efa\u8bae\u6307\u5b9a\u6bcf\u4e2a\u51fd\u6570\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\uff1a"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"int fibonacci(int n) {\n  if (n == 0 || n == 1) return n;\n  return fibonacci(n - 1) + fibonacci(n - 2);\n}\n\nvar result = fibonacci(20);\n"})}),"\n",(0,r.jsxs)(n.p,{children:["A shorthand ",(0,r.jsx)(n.code,{children:"=>"})," (",(0,r.jsx)(n.em,{children:"arrow"}),") syntax is handy for functions that contain a single statement. This syntax is especially useful when passing anonymous functions as arguments:",(0,r.jsx)(n.br,{}),"\n","\u901f\u8bb0 ",(0,r.jsx)(n.code,{children:"=>"})," \uff08\u7bad\u5934\uff09\u8bed\u6cd5\u5bf9\u4e8e\u5305\u542b\u5355\u4e2a\u8bed\u53e5\u7684\u51fd\u6570\u975e\u5e38\u65b9\u4fbf\u3002\u5f53\u5c06\u533f\u540d\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u65f6\uff0c\u6b64\u8bed\u6cd5\u7279\u522b\u6709\u7528\uff1a"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"flybyObjects.where((name) => name.contains('turn')).forEach(print);\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Besides showing an anonymous function (the argument to ",(0,r.jsx)(n.code,{children:"where()"}),"), this code shows that you can use a function as an argument: the top-level ",(0,r.jsx)(n.code,{children:"print()"})," function is an argument to ",(0,r.jsx)(n.code,{children:"forEach()"}),".",(0,r.jsx)(n.br,{}),"\n","\u9664\u4e86\u663e\u793a\u533f\u540d\u51fd\u6570\uff08\u53c2\u6570 \u7684\u53c2\u6570\uff09\u4e4b\u5916\uff0c\u6b64\u4ee3\u7801\u8fd8\u663e\u793a\u60a8\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff1a\u9876\u7ea7 ",(0,r.jsx)(n.code,{children:"print()"})," \u51fd\u6570\u662f \u7684 ",(0,r.jsx)(n.code,{children:"forEach()"})," \u53c2\u6570 ",(0,r.jsx)(n.code,{children:"where()"})," \u3002"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://dart.dev/language/functions",children:"Read more"})," about functions in Dart, including optional parameters, default parameter values, and lexical scope.",(0,r.jsx)(n.br,{}),"\n","\u9605\u8bfb\u6709\u5173 Dart \u4e2d\u7684\u51fd\u6570\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u5305\u62ec\u53ef\u9009\u53c2\u6570\u3001\u9ed8\u8ba4\u53c2\u6570\u503c\u548c\u8bcd\u6cd5\u8303\u56f4\u3002"]}),"\n",(0,r.jsx)(n.h2,{id:"comments-\u8bc4\u8bba",children:"Comments \u8bc4\u8bba"}),"\n",(0,r.jsxs)(n.p,{children:["Dart comments usually start with ",(0,r.jsx)(n.code,{children:"//"}),".",(0,r.jsx)(n.br,{}),"\n","Dart \u6ce8\u91ca\u901a\u5e38\u4ee5 ",(0,r.jsx)(n.code,{children:"//"})," ."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"// This is a normal, one-line comment.\n\n/// This is a documentation comment, used to document libraries,\n/// classes, and their members. Tools like IDEs and dartdoc treat\n/// doc comments specially.\n\n/* Comments like these are also supported. */\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://dart.dev/language/comments",children:"Read more"})," about comments in Dart, including how the documentation tooling works.",(0,r.jsx)(n.br,{}),"\n","\u9605\u8bfb\u6709\u5173 Dart \u4e2d\u6ce8\u91ca\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u5305\u62ec\u6587\u6863\u5de5\u5177\u7684\u5de5\u4f5c\u539f\u7406\u3002"]}),"\n",(0,r.jsx)(n.h2,{id:"imports-\u8fdb\u53e3",children:"Imports \u8fdb\u53e3"}),"\n",(0,r.jsxs)(n.p,{children:["To access APIs defined in other libraries, use ",(0,r.jsx)(n.code,{children:"import"}),".",(0,r.jsx)(n.br,{}),"\n","\u8981\u8bbf\u95ee\u5176\u4ed6\u5e93\u4e2d\u5b9a\u4e49\u7684 API\uff0c\u8bf7\u4f7f\u7528 ",(0,r.jsx)(n.code,{children:"import"})," ."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"// Importing core libraries\nimport 'dart:math';\n\n// Importing libraries from external packages\nimport 'package:test/test.dart';\n\n// Importing files\nimport 'path/to/my_other_file.dart';\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://dart.dev/language/libraries",children:"Read more"})," about libraries and visibility in Dart, including library prefixes, ",(0,r.jsx)(n.code,{children:"show"})," and ",(0,r.jsx)(n.code,{children:"hide"}),", and lazy loading through the ",(0,r.jsx)(n.code,{children:"deferred"})," keyword.",(0,r.jsx)(n.br,{}),"\n","\u9605\u8bfb\u6709\u5173 Dart \u4e2d\u7684\u5e93\u548c\u53ef\u89c1\u6027\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u5305\u62ec\u5e93\u524d\u7f00\u548c ",(0,r.jsx)(n.code,{children:"show"})," ",(0,r.jsx)(n.code,{children:"hide"})," \uff0c\u4ee5\u53ca\u901a\u8fc7 ",(0,r.jsx)(n.code,{children:"deferred"})," \u5173\u952e\u5b57\u5ef6\u8fdf\u52a0\u8f7d\u3002"]}),"\n",(0,r.jsx)(n.h2,{id:"classes-\u7c7b",children:"Classes \u7c7b"}),"\n",(0,r.jsxs)(n.p,{children:["Here\u2019s an example of a class with three properties, two constructors, and a method. One of the properties can\u2019t be set directly, so it\u2019s defined using a getter method (instead of a variable).",(0,r.jsx)(n.br,{}),"\n","\u4e0b\u9762\u662f\u4e00\u4e2a\u5177\u6709\u4e09\u4e2a\u5c5e\u6027\u3001\u4e24\u4e2a\u6784\u9020\u51fd\u6570\u548c\u4e00\u4e2a\u65b9\u6cd5\u7684\u7c7b\u7684\u793a\u4f8b\u3002\u5176\u4e2d\u4e00\u4e2a\u5c5e\u6027\u4e0d\u80fd\u76f4\u63a5\u8bbe\u7f6e\uff0c\u56e0\u6b64\u5b83\u662f\u4f7f\u7528 getter \u65b9\u6cd5\uff08\u800c\u4e0d\u662f\u53d8\u91cf\uff09\u5b9a\u4e49\u7684\u3002",(0,r.jsx)(n.br,{}),"\n","The method uses string interpolation to print variables\u2019 string equivalents inside of string literals.",(0,r.jsx)(n.br,{}),"\n","\u8be5\u65b9\u6cd5\u4f7f\u7528\u5b57\u7b26\u4e32\u63d2\u503c\u5728\u5b57\u7b26\u4e32\u6587\u672c\u4e2d\u6253\u5370\u53d8\u91cf\u7684\u5b57\u7b26\u4e32\u7b49\u6548\u9879\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"class Spacecraft {\n  String name;\n  DateTime? launchDate;\n\n  // Read-only non-final property\n  int? get launchYear => launchDate?.year;\n\n  // Constructor, with syntactic sugar for assignment to members.\n  Spacecraft(this.name, this.launchDate) {\n    // Initialization code goes here.\n  }\n\n  // Named constructor that forwards to the default one.\n  Spacecraft.unlaunched(String name) : this(name, null);\n\n  // Method.\n  void describe() {\n    print('Spacecraft: $name');\n    // Type promotion doesn't work on getters.\n    var launchDate = this.launchDate;\n    if (launchDate != null) {\n      int years = DateTime.now().difference(launchDate).inDays ~/ 365;\n      print('Launched: $launchYear ($years years ago)');\n    } else {\n      print('Unlaunched');\n    }\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://dart.dev/language/built-in-types#strings",children:"Read more"})," about strings, including string interpolation, literals, expressions, and the ",(0,r.jsx)(n.code,{children:"toString()"})," method.",(0,r.jsx)(n.br,{}),"\n","\u9605\u8bfb\u6709\u5173\u5b57\u7b26\u4e32\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5305\u62ec\u5b57\u7b26\u4e32\u63d2\u503c\u3001\u6587\u672c\u3001\u8868\u8fbe\u5f0f\u548c ",(0,r.jsx)(n.code,{children:"toString()"})," \u65b9\u6cd5\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:["You might use the ",(0,r.jsx)(n.code,{children:"Spacecraft"})," class like this:",(0,r.jsx)(n.br,{}),"\n","\u60a8\u53ef\u4ee5\u50cf\u8fd9\u6837\u4f7f\u7528\u8be5 ",(0,r.jsx)(n.code,{children:"Spacecraft"})," \u7c7b\uff1a"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"var voyager = Spacecraft('Voyager I', DateTime(1977, 9, 5));\nvoyager.describe();\n\nvar voyager3 = Spacecraft.unlaunched('Voyager III');\nvoyager3.describe();\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://dart.dev/language/classes",children:"Read more"})," about classes in Dart, including initializer lists, optional ",(0,r.jsx)(n.code,{children:"new"})," and ",(0,r.jsx)(n.code,{children:"const"}),", redirecting constructors, ",(0,r.jsx)(n.code,{children:"factory"})," constructors, getters, setters, and much more.",(0,r.jsx)(n.br,{}),"\n","\u9605\u8bfb\u6709\u5173 Dart \u4e2d\u7684\u7c7b\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u5305\u62ec\u521d\u59cb\u503c\u8bbe\u5b9a\u9879\u5217\u8868\u3001\u53ef\u9009 ",(0,r.jsx)(n.code,{children:"new"})," \u548c ",(0,r.jsx)(n.code,{children:"const"})," \u91cd\u5b9a\u5411\u6784\u9020\u51fd\u6570\u3001\u6784\u9020\u51fd\u6570\u3001 ",(0,r.jsx)(n.code,{children:"factory"})," getter \u548c setters \u7b49\u7b49\u3002"]}),"\n",(0,r.jsx)(n.h2,{id:"enums-\u679a\u4e3e",children:"Enums \u679a\u4e3e"}),"\n",(0,r.jsxs)(n.p,{children:["Enums are a way of enumerating a predefined set of values or instances in a way which ensures that there cannot be any other instances of that type.",(0,r.jsx)(n.br,{}),"\n","\u679a\u4e3e\u662f\u4e00\u79cd\u679a\u4e3e\u4e00\u7ec4\u9884\u5b9a\u4e49\u7684\u503c\u6216\u5b9e\u4f8b\u7684\u65b9\u6cd5\uff0c\u4ee5\u786e\u4fdd\u8be5\u7c7b\u578b\u7684\u4efb\u4f55\u5176\u4ed6\u5b9e\u4f8b\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:["Here is an example of a simple ",(0,r.jsx)(n.code,{children:"enum"})," that defines a simple list of predefined planet types:",(0,r.jsx)(n.br,{}),"\n","\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u793a\u4f8b\uff0c\u5b83\u5b9a\u4e49\u4e86\u9884\u5b9a\u4e49\u884c\u661f\u7c7b\u578b\u7684\u7b80\u5355 ",(0,r.jsx)(n.code,{children:"enum"})," \u5217\u8868\uff1a"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"enum PlanetType { terrestrial, gas, ice }\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Here is an example of an enhanced enum declaration of a class describing planets, with a defined set of constant instances, namely the planets of our own solar system.",(0,r.jsx)(n.br,{}),"\n","\u4e0b\u9762\u662f\u4e00\u4e2a\u63cf\u8ff0\u884c\u661f\u7684\u7c7b\u7684\u589e\u5f3a\u679a\u4e3e\u58f0\u660e\u793a\u4f8b\uff0c\u5177\u6709\u4e00\u7ec4\u5b9a\u4e49\u7684\u5e38\u91cf\u5b9e\u4f8b\uff0c\u5373\u6211\u4eec\u81ea\u5df1\u592a\u9633\u7cfb\u7684\u884c\u661f\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"/// Enum that enumerates the different planets in our solar system\n/// and some of their properties.\nenum Planet {\n  mercury(planetType: PlanetType.terrestrial, moons: 0, hasRings: false),\n  venus(planetType: PlanetType.terrestrial, moons: 0, hasRings: false),\n  // \xb7\xb7\xb7\n  uranus(planetType: PlanetType.ice, moons: 27, hasRings: true),\n  neptune(planetType: PlanetType.ice, moons: 14, hasRings: true);\n\n  /// A constant generating constructor\n  const Planet(\n      {required this.planetType, required this.moons, required this.hasRings});\n\n  /// All instance variables are final\n  final PlanetType planetType;\n  final int moons;\n  final bool hasRings;\n\n  /// Enhanced enums support getters and other methods\n  bool get isGiant =>\n      planetType == PlanetType.gas || planetType == PlanetType.ice;\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You might use the ",(0,r.jsx)(n.code,{children:"Planet"})," enum like this:",(0,r.jsx)(n.br,{}),"\n","\u60a8\u53ef\u4ee5\u50cf\u8fd9\u6837\u4f7f\u7528 ",(0,r.jsx)(n.code,{children:"Planet"})," \u679a\u4e3e\uff1a"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"final yourPlanet = Planet.earth;\n\nif (!yourPlanet.isGiant) {\n  print('Your planet is not a \"giant planet\".');\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://dart.dev/language/enums",children:"Read more"})," about enums in Dart, including enhanced enum requirements, automatically introduced properties, accessing enumerated value names, switch statement support, and much more.",(0,r.jsx)(n.br,{}),"\n","\u9605\u8bfb\u6709\u5173 Dart \u4e2d\u679a\u4e3e\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u5305\u62ec\u589e\u5f3a\u7684\u679a\u4e3e\u8981\u6c42\u3001\u81ea\u52a8\u5f15\u5165\u7684\u5c5e\u6027\u3001\u8bbf\u95ee\u679a\u4e3e\u503c\u540d\u79f0\u3001switch \u8bed\u53e5\u652f\u6301\u7b49\u7b49\u3002"]}),"\n",(0,r.jsx)(n.h2,{id:"inheritance-\u9057\u4ea7",children:"Inheritance \u9057\u4ea7"}),"\n",(0,r.jsxs)(n.p,{children:["Dart has single inheritance.",(0,r.jsx)(n.br,{}),"\n","Dart \u5177\u6709\u5355\u4e00\u7ee7\u627f\u6743\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"class Orbiter extends Spacecraft {\n  double altitude;\n\n  Orbiter(super.name, DateTime super.launchDate, this.altitude);\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://dart.dev/language/extend",children:"Read more"})," about extending classes, the optional ",(0,r.jsx)(n.code,{children:"@override"})," annotation, and more.",(0,r.jsx)(n.br,{}),"\n","\u9605\u8bfb\u6709\u5173\u6269\u5c55\u7c7b\u3001\u53ef\u9009 ",(0,r.jsx)(n.code,{children:"@override"})," \u6ce8\u91ca\u7b49\u7684\u66f4\u591a\u4fe1\u606f\u3002"]}),"\n",(0,r.jsx)(n.h2,{id:"mixins-\u6df7\u5408",children:"Mixins \u6df7\u5408"}),"\n",(0,r.jsxs)(n.p,{children:["Mixins are a way of reusing code in multiple class hierarchies. The following is a mixin declaration:",(0,r.jsx)(n.br,{}),"\n","Mixin \u662f\u4e00\u79cd\u5728\u591a\u4e2a\u7c7b\u5c42\u6b21\u7ed3\u6784\u4e2d\u91cd\u7528\u4ee3\u7801\u7684\u65b9\u6cd5\u3002\u4e0b\u9762\u662f\u4e00\u4e2a mixin \u58f0\u660e\uff1a"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"mixin Piloted {\n  int astronauts = 1;\n\n  void describeCrew() {\n    print('Number of astronauts: $astronauts');\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["To add a mixin\u2019s capabilities to a class, just extend the class with the mixin.",(0,r.jsx)(n.br,{}),"\n","\u8981\u5c06 mixin \u7684\u529f\u80fd\u6dfb\u52a0\u5230\u7c7b\u4e2d\uff0c\u53ea\u9700\u4f7f\u7528 mixin \u6269\u5c55\u8be5\u7c7b\u5373\u53ef\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"class PilotedCraft extends Spacecraft with Piloted {\n  // \xb7\xb7\xb7\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"PilotedCraft"})," now has the ",(0,r.jsx)(n.code,{children:"astronauts"})," field as well as the ",(0,r.jsx)(n.code,{children:"describeCrew()"})," method.",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.code,{children:"PilotedCraft"})," \u73b0\u5728\u6709\u4e86 ",(0,r.jsx)(n.code,{children:"astronauts"})," \u5b57\u6bb5\u548c ",(0,r.jsx)(n.code,{children:"describeCrew()"})," \u65b9\u6cd5\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://dart.dev/language/mixins",children:"Read more"})," about mixins.",(0,r.jsx)(n.br,{}),"\n","\u9605\u8bfb\u66f4\u591a\u5173\u4e8e mixins \u7684\u4fe1\u606f\u3002"]}),"\n",(0,r.jsx)(n.h2,{id:"interfaces-and-abstract-classes",children:"Interfaces and abstract classes"}),"\n",(0,r.jsx)(n.p,{children:"\u63a5\u53e3\u548c\u62bd\u8c61\u7c7b"}),"\n",(0,r.jsxs)(n.p,{children:["All classes implicitly define an interface. Therefore, you can implement any class.",(0,r.jsx)(n.br,{}),"\n","\u6240\u6709\u7c7b\u90fd\u9690\u5f0f\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\u3002\u56e0\u6b64\uff0c\u60a8\u53ef\u4ee5\u5b9e\u73b0\u4efb\u4f55\u7c7b\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"class MockSpaceship implements Spacecraft {\n  // \xb7\xb7\xb7\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Read more about ",(0,r.jsx)(n.a,{href:"https://dart.dev/language/classes#implicit-interfaces",children:"implicit interfaces"}),", or about the explicit ",(0,r.jsxs)(n.a,{href:"https://dart.dev/language/class-modifiers#interface",children:[(0,r.jsx)(n.code,{children:"interface"})," keyword"]}),".",(0,r.jsx)(n.br,{}),"\n","\u9605\u8bfb\u6709\u5173\u9690\u5f0f\u63a5\u53e3\u6216\u663e\u5f0f ",(0,r.jsx)(n.code,{children:"interface"})," \u5173\u952e\u5b57\u7684\u66f4\u591a\u4fe1\u606f\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:["You can create an abstract class to be extended (or implemented) by a concrete class. Abstract classes can contain abstract methods (with empty bodies).",(0,r.jsx)(n.br,{}),"\n","\u60a8\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u7531\u5177\u4f53\u7c7b\u6269\u5c55\uff08\u6216\u5b9e\u73b0\uff09\u3002\u62bd\u8c61\u7c7b\u53ef\u4ee5\u5305\u542b\u62bd\u8c61\u65b9\u6cd5\uff08\u5177\u6709\u7a7a\u4f53\uff09\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"abstract class Describable {\n  void describe();\n\n  void describeWithEmphasis() {\n    print('=========');\n    describe();\n    print('=========');\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Any class extending ",(0,r.jsx)(n.code,{children:"Describable"})," has the ",(0,r.jsx)(n.code,{children:"describeWithEmphasis()"})," method, which calls the extender\u2019s implementation of ",(0,r.jsx)(n.code,{children:"describe()"}),".",(0,r.jsx)(n.br,{}),"\n","\u4efb\u4f55\u7c7b\u6269\u5c55\u90fd\u5177\u6709\u8be5 ",(0,r.jsx)(n.code,{children:"describeWithEmphasis()"})," \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u8c03\u7528\u6269\u5c55 ",(0,r.jsx)(n.code,{children:"Describable"})," \u7a0b\u5e8f\u7684 ",(0,r.jsx)(n.code,{children:"describe()"})," \u5b9e\u73b0\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://dart.dev/language/class-modifiers#abstract",children:"Read more"})," about abstract classes and methods.",(0,r.jsx)(n.br,{}),"\n","\u9605\u8bfb\u6709\u5173\u62bd\u8c61\u7c7b\u548c\u65b9\u6cd5\u7684\u66f4\u591a\u4fe1\u606f\u3002"]}),"\n",(0,r.jsx)(n.h2,{id:"async-\u5f02\u6b65",children:"Async \u5f02\u6b65"}),"\n",(0,r.jsxs)(n.p,{children:["Avoid callback hell and make your code much more readable by using ",(0,r.jsx)(n.code,{children:"async"})," and ",(0,r.jsx)(n.code,{children:"await"}),".",(0,r.jsx)(n.br,{}),"\n","\u907f\u514d\u56de\u8c03\u5730\u72f1\uff0c\u5e76\u4f7f\u7528 ",(0,r.jsx)(n.code,{children:"async"})," \u548c ",(0,r.jsx)(n.code,{children:"await"})," \u4f7f\u60a8\u7684\u4ee3\u7801\u66f4\u5177\u53ef\u8bfb\u6027\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"const oneSecond = Duration(seconds: 1);\n// \xb7\xb7\xb7\nFuture<void> printWithDelay(String message) async {\n  await Future.delayed(oneSecond);\n  print(message);\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The method above is equivalent to:",(0,r.jsx)(n.br,{}),"\n","\u4e0a\u8ff0\u65b9\u6cd5\u7b49\u4ef7\u4e8e\uff1a"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<void> printWithDelay(String message) {\n  return Future.delayed(oneSecond).then((_) {\n    print(message);\n  });\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["As the next example shows, ",(0,r.jsx)(n.code,{children:"async"})," and ",(0,r.jsx)(n.code,{children:"await"})," help make asynchronous code easy to read.",(0,r.jsx)(n.br,{}),"\n","\u5982\u4e0b\u4f8b\u6240\u793a\uff0c ",(0,r.jsx)(n.code,{children:"async"})," \u5e76\u5e2e\u52a9 ",(0,r.jsx)(n.code,{children:"await"})," \u4f7f\u5f02\u6b65\u4ee3\u7801\u6613\u4e8e\u9605\u8bfb\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<void> createDescriptions(Iterable<String> objects) async {\n  for (final object in objects) {\n    try {\n      var file = File('$object.txt');\n      if (await file.exists()) {\n        var modified = await file.lastModified();\n        print(\n            'File for $object already exists. It was modified on $modified.');\n        continue;\n      }\n      await file.create();\n      await file.writeAsString('Start describing $object in this file.');\n    } on IOException catch (e) {\n      print('Cannot create description for $object: $e');\n    }\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You can also use ",(0,r.jsx)(n.code,{children:"async*"}),", which gives you a nice, readable way to build streams.",(0,r.jsx)(n.br,{}),"\n","\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528 ",(0,r.jsx)(n.code,{children:"async*"})," \uff0c\u5b83\u4e3a\u60a8\u63d0\u4f9b\u4e86\u4e00\u79cd\u5f88\u597d\u7684\u3001\u53ef\u8bfb\u7684\u65b9\u5f0f\u6765\u6784\u5efa\u6d41\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Stream<String> report(Spacecraft craft, Iterable<String> objects) async* {\n  for (final object in objects) {\n    await Future.delayed(oneSecond);\n    yield '${craft.name} flies by $object';\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://dart.dev/language/async",children:"Read more"})," about asynchrony support, including ",(0,r.jsx)(n.code,{children:"async"})," functions, ",(0,r.jsx)(n.code,{children:"Future"}),", ",(0,r.jsx)(n.code,{children:"Stream"}),", and the asynchronous loop (",(0,r.jsx)(n.code,{children:"await for"}),").",(0,r.jsx)(n.br,{}),"\n","\u9605\u8bfb\u6709\u5173\u5f02\u6b65\u652f\u6301\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u5305\u62ec ",(0,r.jsx)(n.code,{children:"async"})," \u51fd\u6570\u3001 \u3001 ",(0,r.jsx)(n.code,{children:"Future"})," ",(0,r.jsx)(n.code,{children:"Stream"})," \u548c\u5f02\u6b65\u5faa\u73af \uff08 ",(0,r.jsx)(n.code,{children:"await for"})," \uff09\u3002"]}),"\n",(0,r.jsx)(n.h2,{id:"exceptions-\u5f02\u5e38",children:"Exceptions \u5f02\u5e38"}),"\n",(0,r.jsxs)(n.p,{children:["To raise an exception, use ",(0,r.jsx)(n.code,{children:"throw"}),":",(0,r.jsx)(n.br,{}),"\n","\u8981\u5f15\u53d1\u5f02\u5e38\uff0c\u8bf7\u4f7f\u7528 ",(0,r.jsx)(n.code,{children:"throw"})," \uff1a"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"if (astronauts == 0) {\n  throw StateError('No astronauts.');\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["To catch an exception, use a ",(0,r.jsx)(n.code,{children:"try"})," statement with ",(0,r.jsx)(n.code,{children:"on"})," or ",(0,r.jsx)(n.code,{children:"catch"})," (or both):",(0,r.jsx)(n.br,{}),"\n","\u82e5\u8981\u6355\u83b7\u5f02\u5e38\uff0c\u8bf7\u4f7f\u7528\u5e26\u6709 \u6216\uff08\u6216 ",(0,r.jsx)(n.code,{children:"catch"})," \u4e24\u8005\uff09\u7684 ",(0,r.jsx)(n.code,{children:"try"})," ",(0,r.jsx)(n.code,{children:"on"})," \u8bed\u53e5\uff1a"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<void> describeFlybyObjects(List<String> flybyObjects) async {\n  try {\n    for (final object in flybyObjects) {\n      var description = await File('$object.txt').readAsString();\n      print(description);\n    }\n  } on IOException catch (e) {\n    print('Could not describe object: $e');\n  } finally {\n    flybyObjects.clear();\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Note that the code above is asynchronous; ",(0,r.jsx)(n.code,{children:"try"})," works for both synchronous code and code in an ",(0,r.jsx)(n.code,{children:"async"})," function.",(0,r.jsx)(n.br,{}),"\n","\u8bf7\u6ce8\u610f\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u662f\u5f02\u6b65\u7684; ",(0,r.jsx)(n.code,{children:"try"})," \u9002\u7528\u4e8e\u540c\u6b65\u4ee3\u7801\u548c ",(0,r.jsx)(n.code,{children:"async"})," \u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://dart.dev/language/error-handling#exceptions",children:"Read more"})," about exceptions, including stack traces, ",(0,r.jsx)(n.code,{children:"rethrow"}),", and the difference between ",(0,r.jsx)(n.code,{children:"Error"})," and ",(0,r.jsx)(n.code,{children:"Exception"}),".",(0,r.jsx)(n.br,{}),"\n","\u9605\u8bfb\u6709\u5173\u5f02\u5e38\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u5305\u62ec\u5806\u6808\u8ddf\u8e2a\u3001 ",(0,r.jsx)(n.code,{children:"rethrow"})," \u4ee5\u53ca \u548c ",(0,r.jsx)(n.code,{children:"Exception"})," \u4e4b\u95f4\u7684\u533a\u522b ",(0,r.jsx)(n.code,{children:"Error"})," \u3002"]}),"\n",(0,r.jsx)(n.h2,{id:"important-concepts-\u91cd\u8981\u6982\u5ff5",children:"Important concepts \u91cd\u8981\u6982\u5ff5"}),"\n",(0,r.jsxs)(n.p,{children:["As you continue to learn about the Dart language, keep these facts and concepts in mind:",(0,r.jsx)(n.br,{}),"\n","\u5f53\u60a8\u7ee7\u7eed\u5b66\u4e60 Dart \u8bed\u8a00\u65f6\uff0c\u8bf7\u8bb0\u4f4f\u4ee5\u4e0b\u4e8b\u5b9e\u548c\u6982\u5ff5\uff1a"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Everything you can place in a variable is an ",(0,r.jsx)(n.em,{children:"object"}),", and every object is an instance of a ",(0,r.jsx)(n.em,{children:"class"}),". Even numbers, functions, and ",(0,r.jsx)(n.code,{children:"null"})," are objects. With the exception of ",(0,r.jsx)(n.code,{children:"null"})," (if you enable ",(0,r.jsx)(n.a,{href:"https://dart.dev/null-safety",children:"sound null safety"}),"), all objects inherit from the ",(0,r.jsx)(n.a,{href:"https://api.dart.dev/stable/dart-core/Object-class.html",children:(0,r.jsx)(n.code,{children:"Object"})})," class.",(0,r.jsx)(n.br,{}),"\n","\u53ef\u4ee5\u653e\u5728\u53d8\u91cf\u4e2d\u7684\u6240\u6709\u5185\u5bb9\u90fd\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u662f\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u3002\u5076\u6570\u3001\u51fd\u6570\u548c ",(0,r.jsx)(n.code,{children:"null"})," \u662f\u5bf9\u8c61\u3002\u9664\u4e86 ",(0,r.jsx)(n.code,{children:"null"})," \uff08\u5982\u679c\u542f\u7528 sound null \u5b89\u5168\uff09 \u4e4b\u5916\uff0c\u6240\u6709\u5bf9\u8c61\u90fd\u7ee7\u627f\u81ea\u8be5 ",(0,r.jsx)(n.code,{children:"Object"})," \u7c7b\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"merge_type"})," ",(0,r.jsx)(n.strong,{children:"Version note:"})," ",(0,r.jsx)(n.a,{href:"https://dart.dev/null-safety",children:"Null safety"})," was introduced in Dart 2.12. Using null safety requires a ",(0,r.jsx)(n.a,{href:"https://dart.dev/guides/language/evolution#language-versioning",children:"language version"})," of at least 2.12.",(0,r.jsx)(n.br,{}),"\n","\u7248\u672c\u8bf4\u660e\uff1a\u7a7a\u5b89\u5168\u662f\u5728 Dart 2.12 \u4e2d\u5f15\u5165\u7684\u3002\u4f7f\u7528 null \u5b89\u5168\u8981\u6c42\u8bed\u8a00\u7248\u672c\u81f3\u5c11\u4e3a 2.12\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Although Dart is strongly typed, type annotations are optional because Dart can infer types. In ",(0,r.jsx)(n.code,{children:"var number = 101"}),", ",(0,r.jsx)(n.code,{children:"number"})," is inferred to be of type ",(0,r.jsx)(n.code,{children:"int"}),".",(0,r.jsx)(n.br,{}),"\n","\u867d\u7136 Dart \u662f\u5f3a\u7c7b\u578b\u7684\uff0c\u4f46\u7c7b\u578b\u6ce8\u89e3\u662f\u53ef\u9009\u7684\uff0c\u56e0\u4e3a Dart \u53ef\u4ee5\u63a8\u65ad\u7c7b\u578b\u3002\u5728 \u4e2d ",(0,r.jsx)(n.code,{children:"var number = 101"})," \uff0c ",(0,r.jsx)(n.code,{children:"number"})," \u88ab\u63a8\u65ad\u4e3a \u7684\u7c7b\u578b ",(0,r.jsx)(n.code,{children:"int"})," \u4e3a \u3002"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["If you enable ",(0,r.jsx)(n.a,{href:"https://dart.dev/null-safety",children:"null safety"}),", variables can\u2019t contain ",(0,r.jsx)(n.code,{children:"null"})," unless you say they can. You can make a variable nullable by putting a question mark (",(0,r.jsx)(n.code,{children:"?"}),") at the end of its type. For example, a variable of type ",(0,r.jsx)(n.code,{children:"int?"})," might be an integer, or it might be ",(0,r.jsx)(n.code,{children:"null"}),". If you ",(0,r.jsx)(n.em,{children:"know"})," that an expression never evaluates to ",(0,r.jsx)(n.code,{children:"null"})," but Dart disagrees, you can add ",(0,r.jsx)(n.code,{children:"!"})," to assert that it isn\u2019t null (and to throw an exception if it is). An example: ",(0,r.jsx)(n.code,{children:"int x = nullableButNotNullInt!"}),(0,r.jsx)(n.br,{}),"\n","\u5982\u679c\u542f\u7528 null \u5b89\u5168\uff0c\u5219\u53d8\u91cf\u4e0d\u80fd\u5305\u542b\uff0c\u9664\u975e\u60a8\u8bf4\u5b83\u4eec\u53ef\u4ee5\u5305\u542b ",(0,r.jsx)(n.code,{children:"null"})," \u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u5728\u53d8\u91cf\u7c7b\u578b\u672b\u5c3e\u653e\u7f6e\u95ee\u53f7 \uff08 ",(0,r.jsx)(n.code,{children:"?"})," \uff09 \u6765\u4f7f\u53d8\u91cf\u53ef\u4e3a null\u3002\u4f8b\u5982\uff0c\u7c7b\u578b\u7684 ",(0,r.jsx)(n.code,{children:"int?"})," \u53d8\u91cf\u53ef\u80fd\u662f\u6574\u6570\uff0c\u4e5f\u53ef\u80fd\u662f ",(0,r.jsx)(n.code,{children:"null"})," \u3002\u5982\u679c\u4f60\u77e5\u9053\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\u7ed3\u679c\u6c38\u8fdc\u4e0d\u4f1a\u8fbe\u5230 ",(0,r.jsx)(n.code,{children:"null"})," \uff0c\u4f46 Dart \u4e0d\u540c\u610f\uff0c\u4f60\u53ef\u4ee5\u6dfb\u52a0 ",(0,r.jsx)(n.code,{children:"!"})," \u4ee5\u65ad\u8a00\u5b83\u4e0d\u662f null\uff08\u5982\u679c\u662f\uff0c\u5219\u629b\u51fa\u5f02\u5e38\uff09\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff1a ",(0,r.jsx)(n.code,{children:"int x = nullableButNotNullInt!"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["When you want to explicitly say that any type is allowed, use the type ",(0,r.jsx)(n.code,{children:"Object?"})," (if you\u2019ve enabled null safety), ",(0,r.jsx)(n.code,{children:"Object"}),", or\u2014if you must defer type checking until runtime\u2014the ",(0,r.jsxs)(n.a,{href:"https://dart.dev/effective-dart/design#avoid-using-dynamic-unless-you-want-to-disable-static-checking",children:["special type ",(0,r.jsx)(n.code,{children:"dynamic"})]}),".",(0,r.jsx)(n.br,{}),"\n","\u5982\u679c\u8981\u660e\u786e\u8bf4\u660e\u5141\u8bb8\u4efb\u4f55\u7c7b\u578b\uff0c\u8bf7\u4f7f\u7528\u8be5\u7c7b\u578b\uff08\u5982\u679c\u5df2\u542f\u7528 null \u5b89\u5168\uff09\uff0c ",(0,r.jsx)(n.code,{children:"Object"})," \u6216\u8005\uff08\u5982\u679c\u5fc5\u987b\u5c06\u7c7b\u578b\u68c0\u67e5\u63a8\u8fdf\u5230\u8fd0\u884c\u65f6\uff09\u7279\u6b8a\u7c7b\u578b ",(0,r.jsx)(n.code,{children:"dynamic"})," ",(0,r.jsx)(n.code,{children:"Object?"})," \u3002"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Dart supports generic types, like ",(0,r.jsx)(n.code,{children:"List<int>"})," (a list of integers) or ",(0,r.jsx)(n.code,{children:"List<Object>"})," (a list of objects of any type).",(0,r.jsx)(n.br,{}),"\n","Dart \u652f\u6301\u6cdb\u578b\u7c7b\u578b\uff0c\u4f8b\u5982 ",(0,r.jsx)(n.code,{children:"List<int>"})," \uff08\u6574\u6570\u5217\u8868\uff09\u6216 ",(0,r.jsx)(n.code,{children:"List<Object>"})," \uff08\u4efb\u4f55\u7c7b\u578b\u7684\u5bf9\u8c61\u5217\u8868\uff09\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Dart supports top-level functions (such as ",(0,r.jsx)(n.code,{children:"main()"}),"), as well as functions tied to a class or object (",(0,r.jsx)(n.em,{children:"static"})," and ",(0,r.jsx)(n.em,{children:"instance methods"}),", respectively). You can also create functions within functions (",(0,r.jsx)(n.em,{children:"nested"})," or ",(0,r.jsx)(n.em,{children:"local functions"}),").",(0,r.jsx)(n.br,{}),"\n","Dart \u652f\u6301\u9876\u7ea7\u51fd\u6570\uff08\u4f8b\u5982 ",(0,r.jsx)(n.code,{children:"main()"})," \uff09\uff0c\u4ee5\u53ca\u7ed1\u5b9a\u5230\u7c7b\u6216\u5bf9\u8c61\u7684\u51fd\u6570\uff08\u5206\u522b\u662f\u9759\u6001\u65b9\u6cd5\u548c\u5b9e\u4f8b\u65b9\u6cd5\uff09\u3002\u60a8\u8fd8\u53ef\u4ee5\u5728\u51fd\u6570\uff08\u5d4c\u5957\u6216\u5c40\u90e8\u51fd\u6570\uff09\u4e2d\u521b\u5efa\u51fd\u6570\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Similarly, Dart supports top-level ",(0,r.jsx)(n.em,{children:"variables"}),", as well as variables tied to a class or object (static and instance variables). Instance variables are sometimes known as ",(0,r.jsx)(n.em,{children:"fields"})," or ",(0,r.jsx)(n.em,{children:"properties"}),".",(0,r.jsx)(n.br,{}),"\n","\u7c7b\u4f3c\u5730\uff0cDart \u652f\u6301\u9876\u7ea7\u53d8\u91cf\uff0c\u4ee5\u53ca\u7ed1\u5b9a\u5230\u7c7b\u6216\u5bf9\u8c61\u7684\u53d8\u91cf\uff08\u9759\u6001\u53d8\u91cf\u548c\u5b9e\u4f8b\u53d8\u91cf\uff09\u3002\u5b9e\u4f8b\u53d8\u91cf\u6709\u65f6\u79f0\u4e3a\u5b57\u6bb5\u6216\u5c5e\u6027\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Unlike Java, Dart doesn\u2019t have the keywords ",(0,r.jsx)(n.code,{children:"public"}),", ",(0,r.jsx)(n.code,{children:"protected"}),", and ",(0,r.jsx)(n.code,{children:"private"}),". If an identifier starts with an underscore (",(0,r.jsx)(n.code,{children:"_"}),"), it\u2019s private to its library. For details, see ",(0,r.jsx)(n.a,{href:"https://dart.dev/language/libraries",children:"Libraries and imports"}),".",(0,r.jsx)(n.br,{}),"\n","\u4e0e Java \u4e0d\u540c\uff0cDart \u6ca1\u6709\u5173\u952e\u5b57 ",(0,r.jsx)(n.code,{children:"public"})," \u3001 ",(0,r.jsx)(n.code,{children:"protected"})," \u548c ",(0,r.jsx)(n.code,{children:"private"})," \u3002\u5982\u679c\u6807\u8bc6\u7b26\u4ee5\u4e0b\u5212\u7ebf \uff08 ",(0,r.jsx)(n.code,{children:"_"})," \uff09 \u5f00\u5934\uff0c\u5219\u8be5\u6807\u8bc6\u7b26\u662f\u5176\u5e93\u7684\u79c1\u6709\u6807\u8bc6\u7b26\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u5e93\u548c\u5bfc\u5165\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Identifiers"})," can start with a letter or underscore (",(0,r.jsx)(n.code,{children:"_"}),"), followed by any combination of those characters plus digits.",(0,r.jsx)(n.br,{}),"\n","\u6807\u8bc6\u7b26\u53ef\u4ee5\u4ee5\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf \uff08 ",(0,r.jsx)(n.code,{children:"_"})," \uff09 \u5f00\u5934\uff0c\u540e\u8ddf\u8fd9\u4e9b\u5b57\u7b26\u548c\u6570\u5b57\u7684\u4efb\u610f\u7ec4\u5408\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Dart has both ",(0,r.jsx)(n.em,{children:"expressions"})," (which have runtime values) and ",(0,r.jsx)(n.em,{children:"statements"})," (which don\u2019t). For example, the ",(0,r.jsx)(n.a,{href:"https://dart.dev/language/operators#conditional-expressions",children:"conditional expression"})," ",(0,r.jsx)(n.code,{children:"condition ? expr1 : expr2"})," has a value of ",(0,r.jsx)(n.code,{children:"expr1"})," or ",(0,r.jsx)(n.code,{children:"expr2"}),". Compare that to an ",(0,r.jsx)(n.a,{href:"https://dart.dev/language/branches#if",children:"if-else statement"}),", which has no value. A statement often contains one or more expressions, but an expression can\u2019t directly contain a statement.",(0,r.jsx)(n.br,{}),"\n","Dart \u65e2\u6709\u8868\u8fbe\u5f0f\uff08\u6709\u8fd0\u884c\u65f6\u503c\uff09\uff0c\u4e5f\u6709\u8bed\u53e5\uff08\u6ca1\u6709\uff09\u3002\u4f8b\u5982\uff0c\u6761\u4ef6\u8868\u8fbe\u5f0f ",(0,r.jsx)(n.code,{children:"condition ? expr1 : expr2"})," \u7684\u503c\u4e3a ",(0,r.jsx)(n.code,{children:"expr1"})," \u6216 ",(0,r.jsx)(n.code,{children:"expr2"})," \u3002\u5c06\u5176\u4e0e\u6ca1\u6709\u4ef7\u503c\u7684 if-else \u8bed\u53e5\u8fdb\u884c\u6bd4\u8f83\u3002\u4e00\u4e2a\u8bed\u53e5\u901a\u5e38\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u8868\u8fbe\u5f0f\uff0c\u4f46\u4e00\u4e2a\u8868\u8fbe\u5f0f\u4e0d\u80fd\u76f4\u63a5\u5305\u542b\u4e00\u4e2a\u8bed\u53e5\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Dart tools can report two kinds of problems: ",(0,r.jsx)(n.em,{children:"warnings"})," and ",(0,r.jsx)(n.em,{children:"errors"}),". Warnings are just indications that your code might not work, but they don\u2019t prevent your program from executing. Errors can be either compile-time or run-time. A compile-time error prevents the code from executing at all; a run-time error results in an ",(0,r.jsx)(n.a,{href:"https://dart.dev/language/error-handling#exceptions",children:"exception"})," being raised while the code executes.",(0,r.jsx)(n.br,{}),"\n","Dart \u5de5\u5177\u53ef\u4ee5\u62a5\u544a\u4e24\u79cd\u95ee\u9898\uff1a\u8b66\u544a\u548c\u9519\u8bef\u3002\u8b66\u544a\u53ea\u662f\u8868\u660e\u60a8\u7684\u4ee3\u7801\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u5b83\u4eec\u4e0d\u4f1a\u963b\u6b62\u60a8\u7684\u7a0b\u5e8f\u6267\u884c\u3002\u9519\u8bef\u53ef\u4ee5\u662f\u7f16\u8bd1\u65f6\u9519\u8bef\uff0c\u4e5f\u53ef\u4ee5\u662f\u8fd0\u884c\u65f6\u9519\u8bef\u3002\u7f16\u8bd1\u65f6\u9519\u8bef\u4f1a\u963b\u6b62\u4ee3\u7801\u6267\u884c;\u8fd0\u884c\u65f6\u9519\u8bef\u4f1a\u5bfc\u81f4\u5728\u4ee3\u7801\u6267\u884c\u65f6\u5f15\u53d1\u5f02\u5e38\u3002"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"additional-resources-\u5176\u4ed6\u8d44\u6e90",children:"Additional resources \u5176\u4ed6\u8d44\u6e90"}),"\n",(0,r.jsxs)(n.p,{children:["You can find more documentation and code samples in the ",(0,r.jsx)(n.a,{href:"https://dart.dev/guides/libraries/library-tour",children:"library tour"})," and the ",(0,r.jsx)(n.a,{href:"https://api.dart.dev/",children:"Dart API reference"}),". This site\u2019s code follows the conventions in the ",(0,r.jsx)(n.a,{href:"https://dart.dev/effective-dart/style",children:"Dart style guide"}),".",(0,r.jsx)(n.br,{}),"\n","\u60a8\u53ef\u4ee5\u5728\u5e93\u5bfc\u89c8\u548c Dart API \u53c2\u8003\u4e2d\u627e\u5230\u66f4\u591a\u6587\u6863\u548c\u4ee3\u7801\u793a\u4f8b\u3002\u6b64\u7ad9\u70b9\u7684\u4ee3\u7801\u9075\u5faa Dart \u98ce\u683c\u6307\u5357\u4e2d\u7684\u7ea6\u5b9a\u3002"]})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},67541:function(e,n,s){s.d(n,{Z:function(){return c},a:function(){return i}});var r=s(50959);const t={},a=r.createContext(t);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);